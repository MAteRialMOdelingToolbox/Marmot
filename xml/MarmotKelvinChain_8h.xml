<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="MarmotKelvinChain_8h" kind="file" language="C++">
    <compoundname>MarmotKelvinChain.h</compoundname>
    <includes refid="MarmotNumericalIntegration_8h" local="yes">Marmot/MarmotNumericalIntegration.h</includes>
    <includes refid="MarmotTypedefs_8h" local="yes">Marmot/MarmotTypedefs.h</includes>
    <includes local="yes">autodiff/forward/real.hpp</includes>
    <includes local="no">functional</includes>
    <includedby refid="MarmotKelvinChain_8cpp" local="yes">/home/runner/work/Marmot/Marmot/modules/core/MarmotMechanicsCore/src/MarmotKelvinChain.cpp</includedby>
    <includedby refid="B4_8h" local="yes">/home/runner/work/Marmot/Marmot/modules/materials/B4/include/Marmot/B4.h</includedby>
    <includedby refid="MarmotSolidification_8h" local="yes">/home/runner/work/Marmot/Marmot/modules/materials/B4/include/Marmot/MarmotSolidification.h</includedby>
    <includedby refid="LinearViscoelasticPowerLaw_8h" local="yes">/home/runner/work/Marmot/Marmot/modules/materials/LinearViscoelasticPowerLaw/include/Marmot/LinearViscoelasticPowerLaw.h</includedby>
    <incdepgraph>
      <node id="2">
        <label>Marmot/MarmotNumericalIntegration.h</label>
        <link refid="MarmotNumericalIntegration_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>Marmot/MarmotTypedefs.h</label>
        <link refid="MarmotTypedefs_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>/home/runner/work/Marmot/Marmot/modules/core/MarmotMechanicsCore/include/Marmot/MarmotKelvinChain.h</label>
        <link refid="MarmotKelvinChain_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>Eigen/Core</label>
      </node>
      <node id="6">
        <label>Eigen/Dense</label>
      </node>
      <node id="8">
        <label>autodiff/forward/real.hpp</label>
      </node>
      <node id="3">
        <label>functional</label>
      </node>
      <node id="7">
        <label>unsupported/Eigen/CXX11/Tensor</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="1">
        <label>/home/runner/work/Marmot/Marmot/modules/core/MarmotMechanicsCore/include/Marmot/MarmotKelvinChain.h</label>
        <link refid="MarmotKelvinChain_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>/home/runner/work/Marmot/Marmot/modules/core/MarmotMechanicsCore/src/MarmotKelvinChain.cpp</label>
        <link refid="MarmotKelvinChain_8cpp"/>
      </node>
      <node id="3">
        <label>/home/runner/work/Marmot/Marmot/modules/materials/B4/include/Marmot/B4.h</label>
        <link refid="B4_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>/home/runner/work/Marmot/Marmot/modules/materials/B4/include/Marmot/MarmotSolidification.h</label>
        <link refid="MarmotSolidification_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>/home/runner/work/Marmot/Marmot/modules/materials/B4/src/B4.cpp</label>
        <link refid="B4_8cpp"/>
      </node>
      <node id="5">
        <label>/home/runner/work/Marmot/Marmot/modules/materials/B4/src/B4Registration.cpp</label>
        <link refid="B4Registration_8cpp"/>
      </node>
      <node id="7">
        <label>/home/runner/work/Marmot/Marmot/modules/materials/B4/src/MarmotSolidification.cpp</label>
        <link refid="MarmotSolidification_8cpp"/>
      </node>
      <node id="8">
        <label>/home/runner/work/Marmot/Marmot/modules/materials/LinearViscoelasticPowerLaw/include/Marmot/LinearViscoelasticPowerLaw.h</label>
        <link refid="LinearViscoelasticPowerLaw_8h"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>/home/runner/work/Marmot/Marmot/modules/materials/LinearViscoelasticPowerLaw/src/LinearViscoelasticPowerLaw.cpp</label>
        <link refid="LinearViscoelasticPowerLaw_8cpp"/>
      </node>
      <node id="10">
        <label>/home/runner/work/Marmot/Marmot/modules/materials/LinearViscoelasticPowerLaw/src/LinearViscoelasticPowerLawRegistration.cpp</label>
        <link refid="LinearViscoelasticPowerLawRegistration_8cpp"/>
      </node>
    </invincdepgraph>
    <innerclass refid="structMarmot_1_1Materials_1_1KelvinChain_1_1Factorial" prot="public">Marmot::Materials::KelvinChain::Factorial</innerclass>
    <innerclass refid="structMarmot_1_1Materials_1_1KelvinChain_1_1Factorial_3_010_01_4" prot="public">Marmot::Materials::KelvinChain::Factorial&lt; 0 &gt;</innerclass>
    <innernamespace refid="namespaceMarmot">Marmot</innernamespace>
    <innernamespace refid="namespaceMarmot_1_1Materials">Marmot::Materials</innernamespace>
    <innernamespace refid="namespaceMarmot_1_1Materials_1_1KelvinChain">Marmot::Materials::KelvinChain</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*<sp/>---------------------------------------------------------------------</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/><sp/>_<sp/>__<sp/>___<sp/><sp/><sp/>__<sp/>_<sp/>_<sp/>__<sp/>_<sp/>__<sp/>___<sp/><sp/><sp/>___<sp/>|<sp/>|_</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>|<sp/>&apos;_<sp/>`<sp/>_<sp/>\<sp/>/<sp/>_`<sp/>|<sp/>&apos;__|<sp/>&apos;_<sp/>`<sp/>_<sp/>\<sp/>/<sp/>_<sp/>\|<sp/>__|</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>|<sp/>|<sp/>|<sp/>|<sp/>|<sp/>|<sp/>(_|<sp/>|<sp/>|<sp/><sp/>|<sp/>|<sp/>|<sp/>|<sp/>|<sp/>|<sp/>(_)<sp/>|<sp/>|_</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>|_|<sp/>|_|<sp/>|_|\__,_|_|<sp/><sp/>|_|<sp/>|_|<sp/>|_|\___/<sp/>\__|</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>Unit<sp/>of<sp/>Strength<sp/>of<sp/>Materials<sp/>and<sp/>Structural<sp/>Analysis</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/>University<sp/>of<sp/>Innsbruck,</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>2020<sp/>-<sp/>today</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/>festigkeitslehre@uibk.ac.at</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/>Alexander<sp/>Dummer<sp/>alexander.dummer@uibk.ac.at</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/>This<sp/>file<sp/>is<sp/>part<sp/>of<sp/>the<sp/>MAteRialMOdellingToolbox<sp/>(marmot).</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/>This<sp/>library<sp/>is<sp/>free<sp/>software;<sp/>you<sp/>can<sp/>redistribute<sp/>it<sp/>and/or</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*<sp/>modify<sp/>it<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>GNU<sp/>Lesser<sp/>General<sp/>Public</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*<sp/>License<sp/>as<sp/>published<sp/>by<sp/>the<sp/>Free<sp/>Software<sp/>Foundation;<sp/>either</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*<sp/>version<sp/>2.1<sp/>of<sp/>the<sp/>License,<sp/>or<sp/>(at<sp/>your<sp/>option)<sp/>any<sp/>later<sp/>version.</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/>*<sp/>The<sp/>full<sp/>text<sp/>of<sp/>the<sp/>license<sp/>can<sp/>be<sp/>found<sp/>in<sp/>the<sp/>file<sp/>LICENSE.md<sp/>at</highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/>*<sp/>the<sp/>top<sp/>level<sp/>directory<sp/>of<sp/>marmot.</highlight></codeline>
<codeline lineno="25"><highlight class="comment"><sp/>*<sp/>---------------------------------------------------------------------</highlight></codeline>
<codeline lineno="26"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="MarmotNumericalIntegration_8h" kindref="compound">Marmot/MarmotNumericalIntegration.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="MarmotTypedefs_8h" kindref="compound">Marmot/MarmotTypedefs.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;autodiff/forward/real.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;functional&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34" refid="namespaceMarmot_1_1Materials" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceMarmot_1_1Materials" kindref="compound">Marmot::Materials</ref><sp/>{</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36" refid="namespaceMarmot_1_1Materials_1_1KelvinChain" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceMarmot_1_1Materials_1_1KelvinChain" kindref="compound">KelvinChain</ref><sp/>{</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38" refid="namespaceMarmot_1_1Materials_1_1KelvinChain_1a4161f4ca08c7a35dd1dcd75e630f60f4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>Eigen::VectorXd<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceMarmot_1_1Materials_1_1KelvinChain_1a4161f4ca08c7a35dd1dcd75e630f60f4" kindref="member">Properties</ref>;</highlight></codeline>
<codeline lineno="39" refid="namespaceMarmot_1_1Materials_1_1KelvinChain_1a9fc5728c546ccca8041fc22a969235fa" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>Eigen::Map&lt;<sp/>Properties<sp/>&gt;<sp/><ref refid="namespaceMarmot_1_1Materials_1_1KelvinChain_1a9fc5728c546ccca8041fc22a969235fa" kindref="member">mapProperties</ref>;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41" refid="namespaceMarmot_1_1Materials_1_1KelvinChain_1ac6c31e76aceb440b9b6ea4aee7aae8f3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>Eigen::Matrix&lt;<sp/>double,<sp/>6,<sp/>Eigen::Dynamic<sp/>&gt;<sp/><ref refid="namespaceMarmot_1_1Materials_1_1KelvinChain_1ac6c31e76aceb440b9b6ea4aee7aae8f3" kindref="member">StateVarMatrix</ref>;</highlight></codeline>
<codeline lineno="42" refid="namespaceMarmot_1_1Materials_1_1KelvinChain_1a01798c882d4d09e944aaa13153c21079" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>Eigen::Map&lt;<sp/>StateVarMatrix<sp/>&gt;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceMarmot_1_1Materials_1_1KelvinChain_1a01798c882d4d09e944aaa13153c21079" kindref="member">mapStateVarMatrix</ref>;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>N<sp/>&gt;</highlight></codeline>
<codeline lineno="45" refid="structMarmot_1_1Materials_1_1KelvinChain_1_1Factorial" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structMarmot_1_1Materials_1_1KelvinChain_1_1Factorial" kindref="compound">Factorial</ref><sp/>{</highlight></codeline>
<codeline lineno="46" refid="structMarmot_1_1Materials_1_1KelvinChain_1_1Factorial_1a08f48c5caddb0efd16b1e71aa2ef102eadcbcebce91098bce3d6da9bec5e41773" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{<sp/><ref refid="structMarmot_1_1Materials_1_1KelvinChain_1_1Factorial_1a08f48c5caddb0efd16b1e71aa2ef102eadcbcebce91098bce3d6da9bec5e41773" kindref="member">value</ref><sp/>=<sp/>N<sp/>*<sp/><ref refid="structMarmot_1_1Materials_1_1KelvinChain_1_1Factorial" kindref="compound">Factorial</ref>&lt;<sp/>N<sp/>-<sp/>1<sp/>&gt;<ref refid="structMarmot_1_1Materials_1_1KelvinChain_1_1Factorial_1a08f48c5caddb0efd16b1e71aa2ef102eadcbcebce91098bce3d6da9bec5e41773" kindref="member">::value</ref><sp/>};</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;&gt;</highlight></codeline>
<codeline lineno="50" refid="structMarmot_1_1Materials_1_1KelvinChain_1_1Factorial_3_010_01_4" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structMarmot_1_1Materials_1_1KelvinChain_1_1Factorial" kindref="compound">Factorial</ref>&lt;<sp/>0<sp/>&gt;<sp/>{</highlight></codeline>
<codeline lineno="51" refid="structMarmot_1_1Materials_1_1KelvinChain_1_1Factorial_3_010_01_4_1ad645bab2ad5a6d39ef2f396a5d9d5100a4c2721e671e7e2b17a557a3036bc6173" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{<sp/><ref refid="structMarmot_1_1Materials_1_1KelvinChain_1_1Factorial_3_010_01_4_1ad645bab2ad5a6d39ef2f396a5d9d5100a4c2721e671e7e2b17a557a3036bc6173" kindref="member">value</ref><sp/>=<sp/>1<sp/>};</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k<sp/>&gt;</highlight></codeline>
<codeline lineno="55" refid="namespaceMarmot_1_1Materials_1_1KelvinChain_1a3f564758677f0016ead1ed7dc89fd610" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="namespaceMarmot_1_1Materials_1_1KelvinChain_1a3f564758677f0016ead1ed7dc89fd610" kindref="member">evaluatePostWidderFormula</ref>(<sp/>std::function&lt;<sp/>autodiff::Real&lt;<sp/>k,<sp/>double<sp/>&gt;(<sp/>autodiff::Real&lt;<sp/>k,<sp/>double<sp/>&gt;<sp/>)<sp/>&gt;<sp/>phi,</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tau<sp/>)</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>autodiff::Real&lt;<sp/>k,<sp/>double<sp/>&gt;<sp/>tau_(<sp/>tau<sp/>*<sp/><ref refid="namespaceMarmot_1_1FastorIndices_1a85eb6106aac55482e62eaf6616b95050" kindref="member">k</ref><sp/>);</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>val<sp/>=<sp/>-pow(<sp/>-tau<sp/>*<sp/><ref refid="namespaceMarmot_1_1FastorIndices_1a85eb6106aac55482e62eaf6616b95050" kindref="member">k</ref>,<sp/><ref refid="namespaceMarmot_1_1FastorIndices_1a85eb6106aac55482e62eaf6616b95050" kindref="member">k</ref><sp/>)<sp/>/<sp/>double(<sp/><ref refid="structMarmot_1_1Materials_1_1KelvinChain_1_1Factorial_1a08f48c5caddb0efd16b1e71aa2ef102eadcbcebce91098bce3d6da9bec5e41773" kindref="member">Factorial&lt; k - 1 &gt;::value</ref><sp/>);</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>val<sp/>*=<sp/>autodiff::derivatives(<sp/>phi,<sp/>autodiff::along(<sp/>1.<sp/>),<sp/>autodiff::at(<sp/>tau_<sp/>)<sp/>)[<ref refid="namespaceMarmot_1_1FastorIndices_1a85eb6106aac55482e62eaf6616b95050" kindref="member">k</ref>];</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>val;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k<sp/>&gt;</highlight></codeline>
<codeline lineno="67" refid="namespaceMarmot_1_1Materials_1_1KelvinChain_1a7fddff12d5c5fcc1b6145e7b93fbcc3f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="namespaceMarmot_1_1Materials_1_1KelvinChain_1a7fddff12d5c5fcc1b6145e7b93fbcc3f" kindref="member">approximateZerothCompliance</ref>(<sp/>std::function&lt;<sp/>autodiff::Real&lt;<sp/>k,<sp/>double<sp/>&gt;(<sp/>autodiff::Real&lt;<sp/>k,<sp/>double<sp/>&gt;<sp/>)<sp/>&gt;<sp/>phi,</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>tauMin,</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>spacing<sp/>=<sp/>10.<sp/>)</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceMarmot_1_1NumericalAlgorithms_1_1Integration_1aa814d97a479ef0c4db61d71fc715805a" kindref="member">NumericalAlgorithms::Integration::scalar_to_scalar_function_type</ref><sp/>f<sp/>=<sp/>[&amp;](<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>tau<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>val_<sp/>=<sp/>-pow(<sp/>-<ref refid="namespaceMarmot_1_1FastorIndices_1a85eb6106aac55482e62eaf6616b95050" kindref="member">k</ref>,<sp/><ref refid="namespaceMarmot_1_1FastorIndices_1a85eb6106aac55482e62eaf6616b95050" kindref="member">k</ref><sp/>)<sp/>*<sp/>pow(<sp/>tau,<sp/><ref refid="namespaceMarmot_1_1FastorIndices_1a85eb6106aac55482e62eaf6616b95050" kindref="member">k</ref><sp/>-<sp/>1<sp/>)<sp/>/<sp/>double(<sp/><ref refid="structMarmot_1_1Materials_1_1KelvinChain_1_1Factorial_1a08f48c5caddb0efd16b1e71aa2ef102eadcbcebce91098bce3d6da9bec5e41773" kindref="member">Factorial&lt; k - 1 &gt;::value</ref><sp/>);</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>autodiff::Real&lt;<sp/>k,<sp/>double<sp/>&gt;<sp/>tau_(<sp/>tau<sp/>*<sp/><ref refid="namespaceMarmot_1_1FastorIndices_1a85eb6106aac55482e62eaf6616b95050" kindref="member">k</ref><sp/>);</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>val_<sp/>*=<sp/>autodiff::derivatives(<sp/>phi,<sp/>autodiff::along(<sp/>1.<sp/>),<sp/>autodiff::at(<sp/>tau_<sp/>)<sp/>)[<ref refid="namespaceMarmot_1_1FastorIndices_1a85eb6106aac55482e62eaf6616b95050" kindref="member">k</ref>];</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>val_;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>val<sp/>=<sp/><ref refid="namespaceMarmot_1_1NumericalAlgorithms_1_1Integration_1a16a28fd20646bef921bb8ed2912cb50c" kindref="member">NumericalAlgorithms::Integration::integrateScalarFunction</ref>(<sp/>f,</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>1e-14,<sp/>tauMin<sp/>/<sp/>sqrt(<sp/>spacing<sp/>)<sp/>},</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>100,</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceMarmot_1_1NumericalAlgorithms_1_1Integration_1a78e33745ac095dd6af7d3bd89810717fa6f22a55545873def28aeff360ea3cfd6" kindref="member">NumericalAlgorithms::Integration::simpson</ref><sp/>);</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>val;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k<sp/>&gt;</highlight></codeline>
<codeline lineno="87" refid="namespaceMarmot_1_1Materials_1_1KelvinChain_1a2f2efb416b0dab23259040740294e9e6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceMarmot_1_1Materials_1_1KelvinChain_1a4161f4ca08c7a35dd1dcd75e630f60f4" kindref="member">Properties</ref><sp/><ref refid="namespaceMarmot_1_1Materials_1_1KelvinChain_1a2f2efb416b0dab23259040740294e9e6" kindref="member">computeElasticModuli</ref>(<sp/>std::function&lt;<sp/>autodiff::Real&lt;<sp/>k,<sp/>double<sp/>&gt;(<sp/>autodiff::Real&lt;<sp/>k,<sp/>double<sp/>&gt;<sp/>)<sp/>&gt;<sp/>phi,</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceMarmot_1_1Materials_1_1KelvinChain_1a4161f4ca08c7a35dd1dcd75e630f60f4" kindref="member">Properties</ref><sp/>retardationTimes,</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gaussQuadrature<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceMarmot_1_1Materials_1_1KelvinChain_1a4161f4ca08c7a35dd1dcd75e630f60f4" kindref="member">Properties</ref><sp/>elasticModuli(<sp/>retardationTimes.size()<sp/>);</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>spacing<sp/>=<sp/>retardationTimes(<sp/>1<sp/>)<sp/>/<sp/>retardationTimes(<sp/>0<sp/>);</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="namespaceMarmot_1_1FastorIndices_1a86d3058ec46954e3842516199edc3a6e" kindref="member">i</ref><sp/>=<sp/>0;<sp/><ref refid="namespaceMarmot_1_1FastorIndices_1a86d3058ec46954e3842516199edc3a6e" kindref="member">i</ref><sp/>&lt;<sp/>retardationTimes.size();<sp/><ref refid="namespaceMarmot_1_1FastorIndices_1a86d3058ec46954e3842516199edc3a6e" kindref="member">i</ref>++<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>tau<sp/>=<sp/>retardationTimes(<sp/><ref refid="namespaceMarmot_1_1FastorIndices_1a86d3058ec46954e3842516199edc3a6e" kindref="member">i</ref><sp/>);</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!gaussQuadrature<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elasticModuli(<sp/><ref refid="namespaceMarmot_1_1FastorIndices_1a86d3058ec46954e3842516199edc3a6e" kindref="member">i</ref><sp/>)<sp/>=<sp/>1.<sp/>/<sp/>(<sp/>log(<sp/>spacing<sp/>)<sp/>*<sp/><ref refid="namespaceMarmot_1_1Materials_1_1KelvinChain_1a3f564758677f0016ead1ed7dc89fd610" kindref="member">evaluatePostWidderFormula&lt; k &gt;</ref>(<sp/>phi,<sp/>tau<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elasticModuli(<sp/><ref refid="namespaceMarmot_1_1FastorIndices_1a86d3058ec46954e3842516199edc3a6e" kindref="member">i</ref><sp/>)<sp/>=<sp/>1.<sp/>/</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<sp/>log(<sp/>spacing<sp/>)<sp/>/<sp/>2.<sp/>*</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<sp/><ref refid="namespaceMarmot_1_1Materials_1_1KelvinChain_1a3f564758677f0016ead1ed7dc89fd610" kindref="member">evaluatePostWidderFormula&lt; k &gt;</ref>(<sp/>phi,<sp/>tau<sp/>*<sp/>pow(<sp/>spacing,<sp/>-sqrt(<sp/>3.<sp/>)<sp/>/<sp/>6.<sp/>)<sp/>)<sp/>+</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceMarmot_1_1Materials_1_1KelvinChain_1a3f564758677f0016ead1ed7dc89fd610" kindref="member">evaluatePostWidderFormula&lt; k &gt;</ref>(<sp/>phi,<sp/>tau<sp/>*<sp/>pow(<sp/>spacing,<sp/>sqrt(<sp/>3.<sp/>)<sp/>/<sp/>6.<sp/>)<sp/>)<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>elasticModuli;</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceMarmot_1_1Materials_1_1KelvinChain_1a4161f4ca08c7a35dd1dcd75e630f60f4" kindref="member">Properties</ref><sp/><ref refid="namespaceMarmot_1_1Materials_1_1KelvinChain_1ad2bfc2546999dd6545dcf008b66e6798" kindref="member">generateRetardationTimes</ref>(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>min,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>spacing<sp/>);</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="112" refid="namespaceMarmot_1_1Materials_1_1KelvinChain_1a59398da9ad5bc47468fef8fc9e6239f0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceMarmot_1_1Materials_1_1KelvinChain_1a59398da9ad5bc47468fef8fc9e6239f0" kindref="member">updateStateVarMatrix</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dT,</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceMarmot_1_1Materials_1_1KelvinChain_1a4161f4ca08c7a35dd1dcd75e630f60f4" kindref="member">Properties</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elasticModuli,</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceMarmot_1_1Materials_1_1KelvinChain_1a4161f4ca08c7a35dd1dcd75e630f60f4" kindref="member">Properties</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>retardationTimes,</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Eigen::Ref&lt;<sp/>StateVarMatrix<sp/>&gt;<sp/>stateVars,</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespaceMarmot_1a9ffd691bb9e3aad9fd71fc16249719e8" kindref="member">Marmot::Vector6d</ref>&amp;<sp/><sp/><sp/><sp/><sp/><sp/>dStress,</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespaceMarmot_1a48144b7616079807fd550c92d142e9da" kindref="member">Marmot::Matrix6d</ref>&amp;<sp/><sp/><sp/><sp/><sp/><sp/>unitComplianceMatrix<sp/>);</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceMarmot_1_1Materials_1_1KelvinChain_1aac946db2dcafaf4619982a13535b6a5c" kindref="member">evaluateKelvinChain</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>dT,</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceMarmot_1_1Materials_1_1KelvinChain_1a4161f4ca08c7a35dd1dcd75e630f60f4" kindref="member">Properties</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elasticModuli,</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceMarmot_1_1Materials_1_1KelvinChain_1a4161f4ca08c7a35dd1dcd75e630f60f4" kindref="member">Properties</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>retardationTimes,</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceMarmot_1_1Materials_1_1KelvinChain_1ac6c31e76aceb440b9b6ea4aee7aae8f3" kindref="member">StateVarMatrix</ref><sp/><sp/><sp/><sp/>stateVars,</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uniaxialCompliance,</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceMarmot_1a9ffd691bb9e3aad9fd71fc16249719e8" kindref="member">Marmot::Vector6d</ref>&amp;<sp/>dStrain,</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>factor<sp/>);</highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceMarmot_1_1Materials_1_1KelvinChain_1a24aa27592ecdf22a6880d8dbc64d37c0" kindref="member">computeLambdaAndBeta</ref>(<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>dT,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>tau,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;<sp/>lambda,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;<sp/>beta<sp/>);</highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>KelvinChain</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>Marmot::Materials</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/home/runner/work/Marmot/Marmot/modules/core/MarmotMechanicsCore/include/Marmot/MarmotKelvinChain.h"/>
  </compounddef>
</doxygen>

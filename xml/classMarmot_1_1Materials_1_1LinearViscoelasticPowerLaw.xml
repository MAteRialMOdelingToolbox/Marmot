<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="classMarmot_1_1Materials_1_1LinearViscoelasticPowerLaw" kind="class" language="C++" prot="public">
    <compoundname>Marmot::Materials::LinearViscoelasticPowerLaw</compoundname>
    <basecompoundref refid="classMarmotMaterialHypoElastic" prot="public" virt="non-virtual">MarmotMaterialHypoElastic</basecompoundref>
    <includes refid="LinearViscoelasticPowerLaw_8h" local="no">LinearViscoelasticPowerLaw.h</includes>
    <innerclass refid="classMarmot_1_1Materials_1_1LinearViscoelasticPowerLaw_1_1LinearViscoelasticPowerLawStateVarManager" prot="private">Marmot::Materials::LinearViscoelasticPowerLaw::LinearViscoelasticPowerLawStateVarManager</innerclass>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classMarmot_1_1Materials_1_1LinearViscoelasticPowerLaw_1a8a350ac255db05aefae5cb44fcec40dc" prot="private" static="no" mutable="no">
        <type>const double &amp;</type>
        <definition>const double&amp; Marmot::Materials::LinearViscoelasticPowerLaw::E</definition>
        <argsstring></argsstring>
        <name>E</name>
        <qualifiedname>Marmot::Materials::LinearViscoelasticPowerLaw::E</qualifiedname>
        <briefdescription>
<para>Young&apos;s modulus. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/Marmot/Marmot/modules/materials/LinearViscoelasticPowerLaw/include/Marmot/LinearViscoelasticPowerLaw.h" line="48" column="18" bodyfile="/home/runner/work/Marmot/Marmot/modules/materials/LinearViscoelasticPowerLaw/include/Marmot/LinearViscoelasticPowerLaw.h" bodystart="48" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classMarmot_1_1Materials_1_1LinearViscoelasticPowerLaw_1a3184fcb0522c74d5bd879b7a27cb4fdf" prot="private" static="no" mutable="no">
        <type>const double &amp;</type>
        <definition>const double&amp; Marmot::Materials::LinearViscoelasticPowerLaw::nu</definition>
        <argsstring></argsstring>
        <name>nu</name>
        <qualifiedname>Marmot::Materials::LinearViscoelasticPowerLaw::nu</qualifiedname>
        <briefdescription>
<para>Poisson&apos;s ratio. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/Marmot/Marmot/modules/materials/LinearViscoelasticPowerLaw/include/Marmot/LinearViscoelasticPowerLaw.h" line="51" column="18" bodyfile="/home/runner/work/Marmot/Marmot/modules/materials/LinearViscoelasticPowerLaw/include/Marmot/LinearViscoelasticPowerLaw.h" bodystart="51" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classMarmot_1_1Materials_1_1LinearViscoelasticPowerLaw_1af0a0de96ef50a0f61b781fdb3bdb40a9" prot="private" static="no" mutable="no">
        <type>const double &amp;</type>
        <definition>const double&amp; Marmot::Materials::LinearViscoelasticPowerLaw::m</definition>
        <argsstring></argsstring>
        <name>m</name>
        <qualifiedname>Marmot::Materials::LinearViscoelasticPowerLaw::m</qualifiedname>
        <briefdescription>
<para>power law compliance parameter </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/Marmot/Marmot/modules/materials/LinearViscoelasticPowerLaw/include/Marmot/LinearViscoelasticPowerLaw.h" line="54" column="18" bodyfile="/home/runner/work/Marmot/Marmot/modules/materials/LinearViscoelasticPowerLaw/include/Marmot/LinearViscoelasticPowerLaw.h" bodystart="54" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classMarmot_1_1Materials_1_1LinearViscoelasticPowerLaw_1a55ec6d652b4070c9e9dbb46b9911dc08" prot="private" static="no" mutable="no">
        <type>const double &amp;</type>
        <definition>const double&amp; Marmot::Materials::LinearViscoelasticPowerLaw::n</definition>
        <argsstring></argsstring>
        <name>n</name>
        <qualifiedname>Marmot::Materials::LinearViscoelasticPowerLaw::n</qualifiedname>
        <briefdescription>
<para>power law exponent </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/Marmot/Marmot/modules/materials/LinearViscoelasticPowerLaw/include/Marmot/LinearViscoelasticPowerLaw.h" line="57" column="18" bodyfile="/home/runner/work/Marmot/Marmot/modules/materials/LinearViscoelasticPowerLaw/include/Marmot/LinearViscoelasticPowerLaw.h" bodystart="57" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classMarmot_1_1Materials_1_1LinearViscoelasticPowerLaw_1a62757fda773192e743d8f302c30b01b6" prot="private" static="no" mutable="no">
        <type>const size_t</type>
        <definition>const size_t Marmot::Materials::LinearViscoelasticPowerLaw::nKelvin</definition>
        <argsstring></argsstring>
        <name>nKelvin</name>
        <qualifiedname>Marmot::Materials::LinearViscoelasticPowerLaw::nKelvin</qualifiedname>
        <briefdescription>
<para>number of Kelvin units to approximate the viscoelastic compliance </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/Marmot/Marmot/modules/materials/LinearViscoelasticPowerLaw/include/Marmot/LinearViscoelasticPowerLaw.h" line="60" column="18" bodyfile="/home/runner/work/Marmot/Marmot/modules/materials/LinearViscoelasticPowerLaw/include/Marmot/LinearViscoelasticPowerLaw.h" bodystart="60" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classMarmot_1_1Materials_1_1LinearViscoelasticPowerLaw_1a0fda87240408fe60d16a67d7800a48f4" prot="private" static="no" mutable="no">
        <type>const double &amp;</type>
        <definition>const double&amp; Marmot::Materials::LinearViscoelasticPowerLaw::minTau</definition>
        <argsstring></argsstring>
        <name>minTau</name>
        <qualifiedname>Marmot::Materials::LinearViscoelasticPowerLaw::minTau</qualifiedname>
        <briefdescription>
<para>minimal retardation time used in the viscoelastic Kelvin chain </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/Marmot/Marmot/modules/materials/LinearViscoelasticPowerLaw/include/Marmot/LinearViscoelasticPowerLaw.h" line="63" column="18" bodyfile="/home/runner/work/Marmot/Marmot/modules/materials/LinearViscoelasticPowerLaw/include/Marmot/LinearViscoelasticPowerLaw.h" bodystart="63" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classMarmot_1_1Materials_1_1LinearViscoelasticPowerLaw_1adc6c66ef089c4d2d365bdf1f8fe1f40c" prot="private" static="no" mutable="no">
        <type>const double &amp;</type>
        <definition>const double&amp; Marmot::Materials::LinearViscoelasticPowerLaw::timeToDays</definition>
        <argsstring></argsstring>
        <name>timeToDays</name>
        <qualifiedname>Marmot::Materials::LinearViscoelasticPowerLaw::timeToDays</qualifiedname>
        <briefdescription>
<para>ratio of simulation time to days </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/Marmot/Marmot/modules/materials/LinearViscoelasticPowerLaw/include/Marmot/LinearViscoelasticPowerLaw.h" line="66" column="18" bodyfile="/home/runner/work/Marmot/Marmot/modules/materials/LinearViscoelasticPowerLaw/include/Marmot/LinearViscoelasticPowerLaw.h" bodystart="66" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classMarmot_1_1Materials_1_1LinearViscoelasticPowerLaw_1abef4d01d0571d47d9aedfe793a179ac9" prot="private" static="no" mutable="no">
        <type>std::unique_ptr&lt; <ref refid="classMarmot_1_1Materials_1_1LinearViscoelasticPowerLaw_1_1LinearViscoelasticPowerLawStateVarManager" kindref="compound">LinearViscoelasticPowerLawStateVarManager</ref> &gt;</type>
        <definition>std::unique_ptr&lt; LinearViscoelasticPowerLawStateVarManager &gt; Marmot::Materials::LinearViscoelasticPowerLaw::stateVarManager</definition>
        <argsstring></argsstring>
        <name>stateVarManager</name>
        <qualifiedname>Marmot::Materials::LinearViscoelasticPowerLaw::stateVarManager</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/Marmot/Marmot/modules/materials/LinearViscoelasticPowerLaw/include/Marmot/LinearViscoelasticPowerLaw.h" line="81" column="21" bodyfile="/home/runner/work/Marmot/Marmot/modules/materials/LinearViscoelasticPowerLaw/include/Marmot/LinearViscoelasticPowerLaw.h" bodystart="81" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classMarmot_1_1Materials_1_1LinearViscoelasticPowerLaw_1a182216843349aaaed2b9232070797089" prot="private" static="no" mutable="no">
        <type><ref refid="namespaceMarmot_1_1Materials_1_1KelvinChain_1a4161f4ca08c7a35dd1dcd75e630f60f4" kindref="member">KelvinChain::Properties</ref></type>
        <definition>KelvinChain::Properties Marmot::Materials::LinearViscoelasticPowerLaw::elasticModuli</definition>
        <argsstring></argsstring>
        <name>elasticModuli</name>
        <qualifiedname>Marmot::Materials::LinearViscoelasticPowerLaw::elasticModuli</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/Marmot/Marmot/modules/materials/LinearViscoelasticPowerLaw/include/Marmot/LinearViscoelasticPowerLaw.h" line="103" column="29" bodyfile="/home/runner/work/Marmot/Marmot/modules/materials/LinearViscoelasticPowerLaw/include/Marmot/LinearViscoelasticPowerLaw.h" bodystart="103" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classMarmot_1_1Materials_1_1LinearViscoelasticPowerLaw_1aa0006bb556f36391c6450909c54c5559" prot="private" static="no" mutable="no">
        <type><ref refid="namespaceMarmot_1_1Materials_1_1KelvinChain_1a4161f4ca08c7a35dd1dcd75e630f60f4" kindref="member">KelvinChain::Properties</ref></type>
        <definition>KelvinChain::Properties Marmot::Materials::LinearViscoelasticPowerLaw::retardationTimes</definition>
        <argsstring></argsstring>
        <name>retardationTimes</name>
        <qualifiedname>Marmot::Materials::LinearViscoelasticPowerLaw::retardationTimes</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/Marmot/Marmot/modules/materials/LinearViscoelasticPowerLaw/include/Marmot/LinearViscoelasticPowerLaw.h" line="104" column="29" bodyfile="/home/runner/work/Marmot/Marmot/modules/materials/LinearViscoelasticPowerLaw/include/Marmot/LinearViscoelasticPowerLaw.h" bodystart="104" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classMarmot_1_1Materials_1_1LinearViscoelasticPowerLaw_1af2702f21719f734131f8291b28048036" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double Marmot::Materials::LinearViscoelasticPowerLaw::zerothKelvinChainCompliance</definition>
        <argsstring></argsstring>
        <name>zerothKelvinChainCompliance</name>
        <qualifiedname>Marmot::Materials::LinearViscoelasticPowerLaw::zerothKelvinChainCompliance</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/Marmot/Marmot/modules/materials/LinearViscoelasticPowerLaw/include/Marmot/LinearViscoelasticPowerLaw.h" line="105" column="29" bodyfile="/home/runner/work/Marmot/Marmot/modules/materials/LinearViscoelasticPowerLaw/include/Marmot/LinearViscoelasticPowerLaw.h" bodystart="105" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-static-attrib">
      <memberdef kind="variable" id="classMarmot_1_1Materials_1_1LinearViscoelasticPowerLaw_1ae86381df952b25959061c7f9ef48bfde" prot="private" static="yes" constexpr="yes" mutable="no">
        <type>int</type>
        <definition>int Marmot::Materials::LinearViscoelasticPowerLaw::powerLawApproximationOrder</definition>
        <argsstring></argsstring>
        <name>powerLawApproximationOrder</name>
        <qualifiedname>Marmot::Materials::LinearViscoelasticPowerLaw::powerLawApproximationOrder</qualifiedname>
        <initializer>= 2</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/Marmot/Marmot/modules/materials/LinearViscoelasticPowerLaw/include/Marmot/LinearViscoelasticPowerLaw.h" line="107" column="26" bodyfile="/home/runner/work/Marmot/Marmot/modules/materials/LinearViscoelasticPowerLaw/include/Marmot/LinearViscoelasticPowerLaw.h" bodystart="107" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="classMarmot_1_1Materials_1_1LinearViscoelasticPowerLaw_1a4a67dec7649cb5efc8d8797baf7c93f3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Marmot::Materials::LinearViscoelasticPowerLaw::LinearViscoelasticPowerLaw</definition>
        <argsstring>(const double *materialProperties, int nMaterialProperties, int materialLabel)</argsstring>
        <name>LinearViscoelasticPowerLaw</name>
        <qualifiedname>Marmot::Materials::LinearViscoelasticPowerLaw::LinearViscoelasticPowerLaw</qualifiedname>
        <param>
          <type>const double *</type>
          <declname>materialProperties</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nMaterialProperties</declname>
        </param>
        <param>
          <type>int</type>
          <declname>materialLabel</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/Marmot/Marmot/modules/materials/LinearViscoelasticPowerLaw/include/Marmot/LinearViscoelasticPowerLaw.h" line="86" column="5" bodyfile="/home/runner/work/Marmot/Marmot/modules/materials/LinearViscoelasticPowerLaw/src/LinearViscoelasticPowerLaw.cpp" bodystart="18" bodyend="45"/>
      </memberdef>
      <memberdef kind="function" id="classMarmot_1_1Materials_1_1LinearViscoelasticPowerLaw_1a42d89ace8620936fa91a2686df6094f0" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void Marmot::Materials::LinearViscoelasticPowerLaw::computeStress</definition>
        <argsstring>(double *stress, double *dStressDDStrain, const double *dStrain, const double *timeOld, const double dT, double &amp;pNewDT)</argsstring>
        <name>computeStress</name>
        <qualifiedname>Marmot::Materials::LinearViscoelasticPowerLaw::computeStress</qualifiedname>
        <reimplements refid="classMarmotMaterialHypoElastic_1a4751feeb33fc3205fc5c2b75fdc0d30c">computeStress</reimplements>
        <param>
          <type>double *</type>
          <declname>stress</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>dStressDDStrain</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>dStrain</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>timeOld</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>dT</declname>
        </param>
        <param>
          <type>double &amp;</type>
          <declname>pNewDT</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>For a given linearized strain increment <formula id="72">$\Delta\boldsymbol{\varepsilon}$</formula> at the old and the current time, compute the Cauchy stress and the algorithmic tangent <formula id="73">$\frac{\partial\boldsymbol{\sigma}^{(n+1)}}{\partial\boldsymbol{\varepsilon}^{(n+1)}}$</formula>.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">stress</parametername>
</parameternamelist>
<parameterdescription>
<para>Cauchy stress </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="inout">dStressDDstrain</parametername>
</parameternamelist>
<parameterdescription>
<para>Algorithmic tangent representing the derivative of the Cauchy stress tensor with respect to the linearized strain </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">dStrain</parametername>
</parameternamelist>
<parameterdescription>
<para>linearized strain increment </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">timeOld</parametername>
</parameternamelist>
<parameterdescription>
<para>Old (pseudo-)time </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">dt</parametername>
</parameternamelist>
<parameterdescription>
<para>(Pseudo-)time increment from the old (pseudo-)time to the current (pseudo-)time </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="inout">pNewDT</parametername>
</parameternamelist>
<parameterdescription>
<para>Suggestion for a new time increment </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/Marmot/Marmot/modules/materials/LinearViscoelasticPowerLaw/include/Marmot/LinearViscoelasticPowerLaw.h" line="88" column="10" bodyfile="/home/runner/work/Marmot/Marmot/modules/materials/LinearViscoelasticPowerLaw/src/LinearViscoelasticPowerLaw.cpp" bodystart="47" bodyend="96"/>
      </memberdef>
      <memberdef kind="function" id="classMarmot_1_1Materials_1_1LinearViscoelasticPowerLaw_1ae125be550e9a756d522a5338dae04774" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>int</type>
        <definition>int Marmot::Materials::LinearViscoelasticPowerLaw::getNumberOfRequiredStateVars</definition>
        <argsstring>()</argsstring>
        <name>getNumberOfRequiredStateVars</name>
        <qualifiedname>Marmot::Materials::LinearViscoelasticPowerLaw::getNumberOfRequiredStateVars</qualifiedname>
        <reimplements refid="classMarmotMaterial_1a16e96c33fdc77ddd5aa98ffbbca1577d">getNumberOfRequiredStateVars</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/Marmot/Marmot/modules/materials/LinearViscoelasticPowerLaw/include/Marmot/LinearViscoelasticPowerLaw.h" line="96" column="9" bodyfile="/home/runner/work/Marmot/Marmot/modules/materials/LinearViscoelasticPowerLaw/src/LinearViscoelasticPowerLaw.cpp" bodystart="113" bodyend="116"/>
      </memberdef>
      <memberdef kind="function" id="classMarmot_1_1Materials_1_1LinearViscoelasticPowerLaw_1a08dab7e70520a87d4c55b8a2ebfa3957" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void Marmot::Materials::LinearViscoelasticPowerLaw::assignStateVars</definition>
        <argsstring>(double *stateVars_, int nStateVars)</argsstring>
        <name>assignStateVars</name>
        <qualifiedname>Marmot::Materials::LinearViscoelasticPowerLaw::assignStateVars</qualifiedname>
        <reimplements refid="classMarmotMaterial_1a9644446a593632d0da2462bdeb43e25c">assignStateVars</reimplements>
        <param>
          <type>double *</type>
          <declname>stateVars_</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nStateVars</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/Marmot/Marmot/modules/materials/LinearViscoelasticPowerLaw/include/Marmot/LinearViscoelasticPowerLaw.h" line="98" column="10" bodyfile="/home/runner/work/Marmot/Marmot/modules/materials/LinearViscoelasticPowerLaw/src/LinearViscoelasticPowerLaw.cpp" bodystart="98" bodyend="106"/>
      </memberdef>
      <memberdef kind="function" id="classMarmot_1_1Materials_1_1LinearViscoelasticPowerLaw_1aca8046709f0297f78be42fc45334a565" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="structStateView" kindref="compound">StateView</ref></type>
        <definition>StateView Marmot::Materials::LinearViscoelasticPowerLaw::getStateView</definition>
        <argsstring>(const std::string &amp;stateName)</argsstring>
        <name>getStateView</name>
        <qualifiedname>Marmot::Materials::LinearViscoelasticPowerLaw::getStateView</qualifiedname>
        <reimplements refid="classMarmotMaterial_1acc7dfa70f71415b2c9b562a9fafe64d1">getStateView</reimplements>
        <param>
          <type>const std::string &amp;</type>
          <declname>stateName</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/Marmot/Marmot/modules/materials/LinearViscoelasticPowerLaw/include/Marmot/LinearViscoelasticPowerLaw.h" line="100" column="15" bodyfile="/home/runner/work/Marmot/Marmot/modules/materials/LinearViscoelasticPowerLaw/src/LinearViscoelasticPowerLaw.cpp" bodystart="108" bodyend="111"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>Implementation of a linear elastic material according to the <ref refid="classMarmot_1_1Materials_1_1LinearViscoelasticPowerLaw" kindref="compound">LinearViscoelasticPowerLaw</ref> model by Bazant et al. (2015) generalized for 3D stress states. </para>
    </briefdescription>
    <detaileddescription>
<para>For further information see b4. </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>Marmot::Materials::LinearViscoelasticPowerLaw</label>
        <link refid="classMarmot_1_1Materials_1_1LinearViscoelasticPowerLaw"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>MarmotMaterial</label>
        <link refid="classMarmotMaterial"/>
      </node>
      <node id="2">
        <label>MarmotMaterialHypoElastic</label>
        <link refid="classMarmotMaterialHypoElastic"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>MarmotMaterialMechanical</label>
        <link refid="classMarmotMaterialMechanical"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>Marmot::Materials::LinearViscoelasticPowerLaw</label>
        <link refid="classMarmot_1_1Materials_1_1LinearViscoelasticPowerLaw"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>MarmotMaterial</label>
        <link refid="classMarmotMaterial"/>
      </node>
      <node id="2">
        <label>MarmotMaterialHypoElastic</label>
        <link refid="classMarmotMaterialHypoElastic"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>MarmotMaterialMechanical</label>
        <link refid="classMarmotMaterialMechanical"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/runner/work/Marmot/Marmot/modules/materials/LinearViscoelasticPowerLaw/include/Marmot/LinearViscoelasticPowerLaw.h" line="45" column="3" bodyfile="/home/runner/work/Marmot/Marmot/modules/materials/LinearViscoelasticPowerLaw/include/Marmot/LinearViscoelasticPowerLaw.h" bodystart="45" bodyend="108"/>
    <listofallmembers>
      <member refid="classMarmot_1_1Materials_1_1LinearViscoelasticPowerLaw_1a08dab7e70520a87d4c55b8a2ebfa3957" prot="public" virt="virtual"><scope>Marmot::Materials::LinearViscoelasticPowerLaw</scope><name>assignStateVars</name></member>
      <member refid="classMarmotMaterialHypoElastic_1af526ea494a3ba4d70de3be5d2d55b5a0" prot="public" virt="non-virtual"><scope>Marmot::Materials::LinearViscoelasticPowerLaw</scope><name>characteristicElementLength</name></member>
      <member refid="classMarmotMaterialHypoElastic_1a5486a80660fa57833ce4a4a084d38d2c" prot="public" virt="virtual"><scope>Marmot::Materials::LinearViscoelasticPowerLaw</scope><name>computePlaneStress</name></member>
      <member refid="classMarmotMaterialHypoElastic_1aa90c4ada414a955753901c8c88628381" prot="public" virt="virtual"><scope>Marmot::Materials::LinearViscoelasticPowerLaw</scope><name>computePlaneStress</name></member>
      <member refid="classMarmot_1_1Materials_1_1LinearViscoelasticPowerLaw_1a42d89ace8620936fa91a2686df6094f0" prot="public" virt="virtual"><scope>Marmot::Materials::LinearViscoelasticPowerLaw</scope><name>computeStress</name></member>
      <member refid="classMarmotMaterialHypoElastic_1acf6b9c6f3b81effab814390600e974fa" prot="public" virt="virtual" ambiguityscope="MarmotMaterialHypoElastic::"><scope>Marmot::Materials::LinearViscoelasticPowerLaw</scope><name>computeStress</name></member>
      <member refid="classMarmotMaterialHypoElastic_1a7e3bded903448a16ce9630978de16059" prot="public" virt="virtual"><scope>Marmot::Materials::LinearViscoelasticPowerLaw</scope><name>computeUniaxialStress</name></member>
      <member refid="classMarmotMaterialHypoElastic_1a74c12f7b78dc7da4559140b74b32a05c" prot="public" virt="virtual"><scope>Marmot::Materials::LinearViscoelasticPowerLaw</scope><name>computeUniaxialStress</name></member>
      <member refid="classMarmot_1_1Materials_1_1LinearViscoelasticPowerLaw_1a8a350ac255db05aefae5cb44fcec40dc" prot="private" virt="non-virtual"><scope>Marmot::Materials::LinearViscoelasticPowerLaw</scope><name>E</name></member>
      <member refid="classMarmot_1_1Materials_1_1LinearViscoelasticPowerLaw_1a182216843349aaaed2b9232070797089" prot="private" virt="non-virtual"><scope>Marmot::Materials::LinearViscoelasticPowerLaw</scope><name>elasticModuli</name></member>
      <member refid="classMarmotMaterial_1a6ac833544ecb4bc447d73e1126b4a46a" prot="public" virt="non-virtual"><scope>Marmot::Materials::LinearViscoelasticPowerLaw</scope><name>getAssignedStateVars</name></member>
      <member refid="classMarmotMaterial_1a16ef751ebc410cb5173cb65a2e43e1ec" prot="public" virt="virtual"><scope>Marmot::Materials::LinearViscoelasticPowerLaw</scope><name>getDensity</name></member>
      <member refid="classMarmotMaterial_1ac2e855ed98253c5f426735bc251771dd" prot="public" virt="non-virtual"><scope>Marmot::Materials::LinearViscoelasticPowerLaw</scope><name>getNumberOfAssignedStateVars</name></member>
      <member refid="classMarmot_1_1Materials_1_1LinearViscoelasticPowerLaw_1ae125be550e9a756d522a5338dae04774" prot="public" virt="virtual"><scope>Marmot::Materials::LinearViscoelasticPowerLaw</scope><name>getNumberOfRequiredStateVars</name></member>
      <member refid="classMarmot_1_1Materials_1_1LinearViscoelasticPowerLaw_1aca8046709f0297f78be42fc45334a565" prot="public" virt="virtual"><scope>Marmot::Materials::LinearViscoelasticPowerLaw</scope><name>getStateView</name></member>
      <member refid="classMarmotMaterial_1a9d6615f62d1e33ab694f3e889dba203f" prot="public" virt="virtual"><scope>Marmot::Materials::LinearViscoelasticPowerLaw</scope><name>initializeYourself</name></member>
      <member refid="classMarmot_1_1Materials_1_1LinearViscoelasticPowerLaw_1a4a67dec7649cb5efc8d8797baf7c93f3" prot="public" virt="non-virtual"><scope>Marmot::Materials::LinearViscoelasticPowerLaw</scope><name>LinearViscoelasticPowerLaw</name></member>
      <member refid="classMarmot_1_1Materials_1_1LinearViscoelasticPowerLaw_1af0a0de96ef50a0f61b781fdb3bdb40a9" prot="private" virt="non-virtual"><scope>Marmot::Materials::LinearViscoelasticPowerLaw</scope><name>m</name></member>
      <member refid="classMarmotMaterialMechanical_1a395b074d78052f5e58220cfeda65c5bd" prot="public" virt="non-virtual"><scope>Marmot::Materials::LinearViscoelasticPowerLaw</scope><name>MarmotMaterial</name></member>
      <member refid="classMarmotMaterial_1a31bc9f9283f984f5d78685d82e764edd" prot="public" virt="non-virtual"><scope>Marmot::Materials::LinearViscoelasticPowerLaw</scope><name>materialNumber</name></member>
      <member refid="classMarmotMaterial_1a0f631d6ec14531146ec683712a085960" prot="protected" virt="non-virtual"><scope>Marmot::Materials::LinearViscoelasticPowerLaw</scope><name>materialProperties</name></member>
      <member refid="classMarmot_1_1Materials_1_1LinearViscoelasticPowerLaw_1a0fda87240408fe60d16a67d7800a48f4" prot="private" virt="non-virtual"><scope>Marmot::Materials::LinearViscoelasticPowerLaw</scope><name>minTau</name></member>
      <member refid="classMarmot_1_1Materials_1_1LinearViscoelasticPowerLaw_1a55ec6d652b4070c9e9dbb46b9911dc08" prot="private" virt="non-virtual"><scope>Marmot::Materials::LinearViscoelasticPowerLaw</scope><name>n</name></member>
      <member refid="classMarmot_1_1Materials_1_1LinearViscoelasticPowerLaw_1a62757fda773192e743d8f302c30b01b6" prot="private" virt="non-virtual"><scope>Marmot::Materials::LinearViscoelasticPowerLaw</scope><name>nKelvin</name></member>
      <member refid="classMarmotMaterial_1a0b6c5faf3cb8abd50c67146dad8c175a" prot="protected" virt="non-virtual"><scope>Marmot::Materials::LinearViscoelasticPowerLaw</scope><name>nMaterialProperties</name></member>
      <member refid="classMarmotMaterial_1a9b7554e1cb090e36004b1590f6cdb73c" prot="protected" virt="non-virtual"><scope>Marmot::Materials::LinearViscoelasticPowerLaw</scope><name>nStateVars</name></member>
      <member refid="classMarmot_1_1Materials_1_1LinearViscoelasticPowerLaw_1a3184fcb0522c74d5bd879b7a27cb4fdf" prot="private" virt="non-virtual"><scope>Marmot::Materials::LinearViscoelasticPowerLaw</scope><name>nu</name></member>
      <member refid="classMarmot_1_1Materials_1_1LinearViscoelasticPowerLaw_1ae86381df952b25959061c7f9ef48bfde" prot="private" virt="non-virtual"><scope>Marmot::Materials::LinearViscoelasticPowerLaw</scope><name>powerLawApproximationOrder</name></member>
      <member refid="classMarmot_1_1Materials_1_1LinearViscoelasticPowerLaw_1aa0006bb556f36391c6450909c54c5559" prot="private" virt="non-virtual"><scope>Marmot::Materials::LinearViscoelasticPowerLaw</scope><name>retardationTimes</name></member>
      <member refid="classMarmotMaterialHypoElastic_1aee2d34ac568027969f668999154b4b20" prot="public" virt="non-virtual"><scope>Marmot::Materials::LinearViscoelasticPowerLaw</scope><name>setCharacteristicElementLength</name></member>
      <member refid="classMarmot_1_1Materials_1_1LinearViscoelasticPowerLaw_1abef4d01d0571d47d9aedfe793a179ac9" prot="private" virt="non-virtual"><scope>Marmot::Materials::LinearViscoelasticPowerLaw</scope><name>stateVarManager</name></member>
      <member refid="classMarmotMaterial_1a3153122a8c7819cc306d6d35378cf414" prot="protected" virt="non-virtual"><scope>Marmot::Materials::LinearViscoelasticPowerLaw</scope><name>stateVars</name></member>
      <member refid="classMarmot_1_1Materials_1_1LinearViscoelasticPowerLaw_1adc6c66ef089c4d2d365bdf1f8fe1f40c" prot="private" virt="non-virtual"><scope>Marmot::Materials::LinearViscoelasticPowerLaw</scope><name>timeToDays</name></member>
      <member refid="classMarmot_1_1Materials_1_1LinearViscoelasticPowerLaw_1af2702f21719f734131f8291b28048036" prot="private" virt="non-virtual"><scope>Marmot::Materials::LinearViscoelasticPowerLaw</scope><name>zerothKelvinChainCompliance</name></member>
      <member refid="classMarmotMaterial_1a33fd1c89a919e8b0d396eb846614c815" prot="public" virt="virtual"><scope>Marmot::Materials::LinearViscoelasticPowerLaw</scope><name>~MarmotMaterial</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

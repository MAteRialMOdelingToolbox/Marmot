<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="MarmotTensor_8h" kind="file" language="C++">
    <compoundname>MarmotTensor.h</compoundname>
    <includes refid="MarmotJournal_8h" local="yes">Marmot/MarmotJournal.h</includes>
    <includes refid="MarmotTypedefs_8h" local="yes">Marmot/MarmotTypedefs.h</includes>
    <includes refid="MarmotVoigt_8h" local="yes">Marmot/MarmotVoigt.h</includes>
    <includes local="no">utility</includes>
    <includedby refid="MarmotFastorTensorBasics_8h" local="yes">/home/runner/work/Marmot/Marmot/modules/core/MarmotMathCore/include/Marmot/MarmotFastorTensorBasics.h</includedby>
    <includedby refid="MarmotTensor_8cpp" local="yes">/home/runner/work/Marmot/Marmot/modules/core/MarmotMathCore/src/MarmotTensor.cpp</includedby>
    <includedby refid="HaighWestergaard_8cpp" local="yes">/home/runner/work/Marmot/Marmot/modules/core/MarmotMechanicsCore/src/HaighWestergaard.cpp</includedby>
    <includedby refid="HughesWinget_8cpp" local="yes">/home/runner/work/Marmot/Marmot/modules/core/MarmotMechanicsCore/src/HughesWinget.cpp</includedby>
    <includedby refid="MarmotKinematics_8cpp" local="yes">/home/runner/work/Marmot/Marmot/modules/core/MarmotMechanicsCore/src/MarmotKinematics.cpp</includedby>
    <includedby refid="MarmotLocalization_8cpp" local="yes">/home/runner/work/Marmot/Marmot/modules/core/MarmotMechanicsCore/src/MarmotLocalization.cpp</includedby>
    <includedby refid="MarmotLowerDimensionalStress_8cpp" local="yes">/home/runner/work/Marmot/Marmot/modules/core/MarmotMechanicsCore/src/MarmotLowerDimensionalStress.cpp</includedby>
    <includedby refid="MarmotMaterialHyperElastic_8cpp" local="yes">/home/runner/work/Marmot/Marmot/modules/core/MarmotMechanicsCore/src/MarmotMaterialHyperElastic.cpp</includedby>
    <includedby refid="MarmotMaterialHypoElastic_8cpp" local="yes">/home/runner/work/Marmot/Marmot/modules/core/MarmotMechanicsCore/src/MarmotMaterialHypoElastic.cpp</includedby>
    <includedby refid="MarmotMaterialHypoElasticNonLocal_8cpp" local="yes">/home/runner/work/Marmot/Marmot/modules/core/MarmotMechanicsCore/src/MarmotMaterialHypoElasticNonLocal.cpp</includedby>
    <includedby refid="MarmotVoigt_8cpp" local="yes">/home/runner/work/Marmot/Marmot/modules/core/MarmotMechanicsCore/src/MarmotVoigt.cpp</includedby>
    <includedby refid="DisplacementFiniteStrainULElement_8h" local="yes">/home/runner/work/Marmot/Marmot/modules/elements/DisplacementFiniteStrainULElement/include/Marmot/DisplacementFiniteStrainULElement.h</includedby>
    <includedby refid="VonMises_8cpp" local="yes">/home/runner/work/Marmot/Marmot/modules/materials/VonMises/src/VonMises.cpp</includedby>
    <incdepgraph>
      <node id="2">
        <label>Marmot/MarmotJournal.h</label>
        <link refid="MarmotJournal_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>Marmot/MarmotConstants.h</label>
        <link refid="MarmotConstants_8h"/>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>Marmot/MarmotMath.h</label>
        <link refid="MarmotMath_8h"/>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>/home/runner/work/Marmot/Marmot/modules/core/MarmotMathCore/include/Marmot/MarmotTensor.h</label>
        <link refid="MarmotTensor_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>Marmot/MarmotTypedefs.h</label>
        <link refid="MarmotTypedefs_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>Marmot/MarmotVoigt.h</label>
        <link refid="MarmotVoigt_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>Eigen/Core</label>
      </node>
      <node id="8">
        <label>Eigen/Dense</label>
      </node>
      <node id="16">
        <label>algorithm</label>
      </node>
      <node id="14">
        <label>autodiff/forward/dual.hpp</label>
      </node>
      <node id="17">
        <label>autodiff/forward/dual/dual.hpp</label>
      </node>
      <node id="15">
        <label>autodiff/forward/real.hpp</label>
      </node>
      <node id="13">
        <label>cmath</label>
      </node>
      <node id="18">
        <label>complex</label>
      </node>
      <node id="3">
        <label>iostream</label>
      </node>
      <node id="4">
        <label>sstream</label>
      </node>
      <node id="5">
        <label>string</label>
      </node>
      <node id="9">
        <label>unsupported/Eigen/CXX11/Tensor</label>
      </node>
      <node id="19">
        <label>utility</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="3">
        <label>/home/runner/work/Marmot/Marmot/modules/core/MarmotFiniteStrainMechanicsCore/include/Marmot/MarmotDeformationMeasures.h</label>
        <link refid="MarmotDeformationMeasures_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>/home/runner/work/Marmot/Marmot/modules/core/MarmotFiniteStrainMechanicsCore/include/Marmot/MarmotEnergyDensityFunctions.h</label>
        <link refid="MarmotEnergyDensityFunctions_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>/home/runner/work/Marmot/Marmot/modules/core/MarmotFiniteStrainMechanicsCore/include/Marmot/MarmotFiniteStrainPlasticity.h</label>
        <link refid="MarmotFiniteStrainPlasticity_8h"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>/home/runner/work/Marmot/Marmot/modules/core/MarmotFiniteStrainMechanicsCore/include/Marmot/MarmotStressMeasures.h</label>
        <link refid="MarmotStressMeasures_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>/home/runner/work/Marmot/Marmot/modules/core/MarmotFiniteStrainMechanicsCore/src/MarmotFiniteStrainPlasticity.cpp</label>
        <link refid="MarmotFiniteStrainPlasticity_8cpp"/>
      </node>
      <node id="12">
        <label>/home/runner/work/Marmot/Marmot/modules/core/MarmotMathCore/include/Marmot/MarmotAutomaticDifferentiationForFastor.h</label>
        <link refid="MarmotAutomaticDifferentiationForFastor_8h"/>
      </node>
      <node id="2">
        <label>/home/runner/work/Marmot/Marmot/modules/core/MarmotMathCore/include/Marmot/MarmotFastorTensorBasics.h</label>
        <link refid="MarmotFastorTensorBasics_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>/home/runner/work/Marmot/Marmot/modules/core/MarmotMathCore/include/Marmot/MarmotNumericalDifferentiationForFastor.h</label>
        <link refid="MarmotNumericalDifferentiationForFastor_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>/home/runner/work/Marmot/Marmot/modules/core/MarmotMathCore/include/Marmot/MarmotTensor.h</label>
        <link refid="MarmotTensor_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>/home/runner/work/Marmot/Marmot/modules/core/MarmotMathCore/src/MarmotTensor.cpp</label>
        <link refid="MarmotTensor_8cpp"/>
      </node>
      <node id="17">
        <label>/home/runner/work/Marmot/Marmot/modules/core/MarmotMechanicsCore/src/HaighWestergaard.cpp</label>
        <link refid="HaighWestergaard_8cpp"/>
      </node>
      <node id="18">
        <label>/home/runner/work/Marmot/Marmot/modules/core/MarmotMechanicsCore/src/HughesWinget.cpp</label>
        <link refid="HughesWinget_8cpp"/>
      </node>
      <node id="19">
        <label>/home/runner/work/Marmot/Marmot/modules/core/MarmotMechanicsCore/src/MarmotKinematics.cpp</label>
        <link refid="MarmotKinematics_8cpp"/>
      </node>
      <node id="20">
        <label>/home/runner/work/Marmot/Marmot/modules/core/MarmotMechanicsCore/src/MarmotLocalization.cpp</label>
        <link refid="MarmotLocalization_8cpp"/>
      </node>
      <node id="21">
        <label>/home/runner/work/Marmot/Marmot/modules/core/MarmotMechanicsCore/src/MarmotLowerDimensionalStress.cpp</label>
        <link refid="MarmotLowerDimensionalStress_8cpp"/>
      </node>
      <node id="22">
        <label>/home/runner/work/Marmot/Marmot/modules/core/MarmotMechanicsCore/src/MarmotMaterialHyperElastic.cpp</label>
        <link refid="MarmotMaterialHyperElastic_8cpp"/>
      </node>
      <node id="23">
        <label>/home/runner/work/Marmot/Marmot/modules/core/MarmotMechanicsCore/src/MarmotMaterialHypoElastic.cpp</label>
        <link refid="MarmotMaterialHypoElastic_8cpp"/>
      </node>
      <node id="24">
        <label>/home/runner/work/Marmot/Marmot/modules/core/MarmotMechanicsCore/src/MarmotMaterialHypoElasticNonLocal.cpp</label>
        <link refid="MarmotMaterialHypoElasticNonLocal_8cpp"/>
      </node>
      <node id="25">
        <label>/home/runner/work/Marmot/Marmot/modules/core/MarmotMechanicsCore/src/MarmotVoigt.cpp</label>
        <link refid="MarmotVoigt_8cpp"/>
      </node>
      <node id="14">
        <label>/home/runner/work/Marmot/Marmot/modules/elements/DisplacementFiniteStrainULElement/include/Marmot/DisplacementFiniteStrainULElement.h</label>
        <link refid="DisplacementFiniteStrainULElement_8h"/>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>/home/runner/work/Marmot/Marmot/modules/elements/DisplacementFiniteStrainULElement/src/DisplacementFiniteStrainULElement.cpp</label>
        <link refid="DisplacementFiniteStrainULElement_8cpp"/>
      </node>
      <node id="4">
        <label>/home/runner/work/Marmot/Marmot/modules/materials/CompressibleNeoHooke/src/CompressibleNeoHooke.cpp</label>
        <link refid="CompressibleNeoHooke_8cpp"/>
      </node>
      <node id="5">
        <label>/home/runner/work/Marmot/Marmot/modules/materials/FiniteStrainJ2Plasticity/include/Marmot/FiniteStrainJ2Plasticity.h</label>
        <link refid="FiniteStrainJ2Plasticity_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>/home/runner/work/Marmot/Marmot/modules/materials/FiniteStrainJ2Plasticity/src/FiniteStrainJ2Plasticity.cpp</label>
        <link refid="FiniteStrainJ2Plasticity_8cpp"/>
      </node>
      <node id="7">
        <label>/home/runner/work/Marmot/Marmot/modules/materials/FiniteStrainJ2Plasticity/src/FiniteStrainJ2PlasticityRegistration.cpp</label>
        <link refid="FiniteStrainJ2PlasticityRegistration_8cpp"/>
      </node>
      <node id="26">
        <label>/home/runner/work/Marmot/Marmot/modules/materials/VonMises/src/VonMises.cpp</label>
        <link refid="VonMises_8cpp"/>
      </node>
    </invincdepgraph>
    <innernamespace refid="namespaceMarmot">Marmot</innernamespace>
    <innernamespace refid="namespaceMarmot_1_1ContinuumMechanics">Marmot::ContinuumMechanics</innernamespace>
    <innernamespace refid="namespaceMarmot_1_1ContinuumMechanics_1_1CommonTensors">Marmot::ContinuumMechanics::CommonTensors</innernamespace>
    <innernamespace refid="namespaceMarmot_1_1ContinuumMechanics_1_1TensorUtility">Marmot::ContinuumMechanics::TensorUtility</innernamespace>
    <innernamespace refid="namespaceMarmot_1_1ContinuumMechanics_1_1TensorUtility_1_1IndexNotation">Marmot::ContinuumMechanics::TensorUtility::IndexNotation</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*<sp/>---------------------------------------------------------------------</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/><sp/>_<sp/>__<sp/>___<sp/><sp/><sp/>__<sp/>_<sp/>_<sp/>__<sp/>_<sp/>__<sp/>___<sp/><sp/><sp/>___<sp/>|<sp/>|_</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>|<sp/>&apos;_<sp/>`<sp/>_<sp/>\<sp/>/<sp/>_`<sp/>|<sp/>&apos;__|<sp/>&apos;_<sp/>`<sp/>_<sp/>\<sp/>/<sp/>_<sp/>\|<sp/>__|</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>|<sp/>|<sp/>|<sp/>|<sp/>|<sp/>|<sp/>(_|<sp/>|<sp/>|<sp/><sp/>|<sp/>|<sp/>|<sp/>|<sp/>|<sp/>|<sp/>(_)<sp/>|<sp/>|_</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>|_|<sp/>|_|<sp/>|_|\__,_|_|<sp/><sp/>|_|<sp/>|_|<sp/>|_|\___/<sp/>\__|</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>Unit<sp/>of<sp/>Strength<sp/>of<sp/>Materials<sp/>and<sp/>Structural<sp/>Analysis</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/>University<sp/>of<sp/>Innsbruck,</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>2020<sp/>-<sp/>today</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/>festigkeitslehre@uibk.ac.at</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/>Matthias<sp/>Neuner<sp/>matthias.neuner@uibk.ac.at</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/>This<sp/>file<sp/>is<sp/>part<sp/>of<sp/>the<sp/>MAteRialMOdellingToolbox<sp/>(marmot).</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/>This<sp/>library<sp/>is<sp/>free<sp/>software;<sp/>you<sp/>can<sp/>redistribute<sp/>it<sp/>and/or</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*<sp/>modify<sp/>it<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>GNU<sp/>Lesser<sp/>General<sp/>Public</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*<sp/>License<sp/>as<sp/>published<sp/>by<sp/>the<sp/>Free<sp/>Software<sp/>Foundation;<sp/>either</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*<sp/>version<sp/>2.1<sp/>of<sp/>the<sp/>License,<sp/>or<sp/>(at<sp/>your<sp/>option)<sp/>any<sp/>later<sp/>version.</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/>*<sp/>The<sp/>full<sp/>text<sp/>of<sp/>the<sp/>license<sp/>can<sp/>be<sp/>found<sp/>in<sp/>the<sp/>file<sp/>LICENSE.md<sp/>at</highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/>*<sp/>the<sp/>top<sp/>level<sp/>directory<sp/>of<sp/>marmot.</highlight></codeline>
<codeline lineno="25"><highlight class="comment"><sp/>*<sp/>---------------------------------------------------------------------</highlight></codeline>
<codeline lineno="26"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="MarmotJournal_8h" kindref="compound">Marmot/MarmotJournal.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="MarmotTypedefs_8h" kindref="compound">Marmot/MarmotTypedefs.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="MarmotVoigt_8h" kindref="compound">Marmot/MarmotVoigt.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;utility&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceMarmot" kindref="compound">Marmot</ref><sp/>{</highlight></codeline>
<codeline lineno="35" refid="namespaceMarmot_1_1ContinuumMechanics_1_1CommonTensors" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceMarmot_1_1ContinuumMechanics_1_1CommonTensors" kindref="compound">ContinuumMechanics::CommonTensors</ref><sp/>{</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceMarmot_1_1EigenTensors_1aa4563649c16ed3f59d5f08265ab511f4" kindref="member">EigenTensors::Tensor3333d</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceMarmot_1_1ContinuumMechanics_1_1CommonTensors_1a294e73f136b9d0537eb4f44a8ccc069b" kindref="member">Initialize_I2xI2</ref>();</highlight></codeline>
<codeline lineno="38" refid="namespaceMarmot_1_1ContinuumMechanics_1_1CommonTensors_1a19e903c99f721cb9a86a8613f35794a0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespaceMarmot_1_1EigenTensors_1aa4563649c16ed3f59d5f08265ab511f4" kindref="member">EigenTensors::Tensor3333d</ref><sp/><ref refid="namespaceMarmot_1_1ContinuumMechanics_1_1CommonTensors_1a19e903c99f721cb9a86a8613f35794a0" kindref="member">I2xI2</ref><sp/>=<sp/><ref refid="namespaceMarmot_1_1ContinuumMechanics_1_1CommonTensors_1a294e73f136b9d0537eb4f44a8ccc069b" kindref="member">Initialize_I2xI2</ref>();</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceMarmot_1_1EigenTensors_1aa4563649c16ed3f59d5f08265ab511f4" kindref="member">EigenTensors::Tensor3333d</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceMarmot_1_1ContinuumMechanics_1_1CommonTensors_1abe2ec276be4c69f07782ca5ea45208da" kindref="member">Initialize_Isym</ref>();</highlight></codeline>
<codeline lineno="41" refid="namespaceMarmot_1_1ContinuumMechanics_1_1CommonTensors_1aad74cf6891e87ab6df1f6db6ee2ccb86" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespaceMarmot_1_1EigenTensors_1aa4563649c16ed3f59d5f08265ab511f4" kindref="member">EigenTensors::Tensor3333d</ref><sp/><ref refid="namespaceMarmot_1_1ContinuumMechanics_1_1CommonTensors_1aad74cf6891e87ab6df1f6db6ee2ccb86" kindref="member">Isym</ref><sp/>=<sp/><ref refid="namespaceMarmot_1_1ContinuumMechanics_1_1CommonTensors_1abe2ec276be4c69f07782ca5ea45208da" kindref="member">Initialize_Isym</ref>();</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceMarmot_1_1EigenTensors_1aa4563649c16ed3f59d5f08265ab511f4" kindref="member">EigenTensors::Tensor3333d</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceMarmot_1_1ContinuumMechanics_1_1CommonTensors_1a6933ca3d6e37a17d22ebd6cb459b48f8" kindref="member">Initialize_Iskew</ref>();</highlight></codeline>
<codeline lineno="44" refid="namespaceMarmot_1_1ContinuumMechanics_1_1CommonTensors_1a39e22eecd0896eb7b3c4158fdb25340e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespaceMarmot_1_1EigenTensors_1aa4563649c16ed3f59d5f08265ab511f4" kindref="member">EigenTensors::Tensor3333d</ref><sp/><ref refid="namespaceMarmot_1_1ContinuumMechanics_1_1CommonTensors_1a39e22eecd0896eb7b3c4158fdb25340e" kindref="member">Iskew</ref><sp/>=<sp/><ref refid="namespaceMarmot_1_1ContinuumMechanics_1_1CommonTensors_1a6933ca3d6e37a17d22ebd6cb459b48f8" kindref="member">Initialize_Iskew</ref>();</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceMarmot_1_1EigenTensors_1aa4563649c16ed3f59d5f08265ab511f4" kindref="member">EigenTensors::Tensor3333d</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceMarmot_1_1ContinuumMechanics_1_1CommonTensors_1ab947cce47c424defd38ea12a9361d99a" kindref="member">Initialize_IFourthOrder</ref>();</highlight></codeline>
<codeline lineno="47" refid="namespaceMarmot_1_1ContinuumMechanics_1_1CommonTensors_1ab12fa46f0ae9374c111d07cfd88e44d6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespaceMarmot_1_1EigenTensors_1aa4563649c16ed3f59d5f08265ab511f4" kindref="member">EigenTensors::Tensor3333d</ref><sp/><ref refid="namespaceMarmot_1_1ContinuumMechanics_1_1CommonTensors_1ab12fa46f0ae9374c111d07cfd88e44d6" kindref="member">IFourthOrder</ref><sp/>=<sp/><ref refid="namespaceMarmot_1_1ContinuumMechanics_1_1CommonTensors_1ab947cce47c424defd38ea12a9361d99a" kindref="member">Initialize_IFourthOrder</ref>();</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceMarmot_1_1EigenTensors_1aa4563649c16ed3f59d5f08265ab511f4" kindref="member">EigenTensors::Tensor3333d</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceMarmot_1_1ContinuumMechanics_1_1CommonTensors_1a7a0d6e2cef1957f9d6849c030048fe4f" kindref="member">Initialize_IFourthOrderTranspose</ref>();</highlight></codeline>
<codeline lineno="50" refid="namespaceMarmot_1_1ContinuumMechanics_1_1CommonTensors_1a488003e8a0f1a7cc17e2d27346b4aaea" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespaceMarmot_1_1EigenTensors_1aa4563649c16ed3f59d5f08265ab511f4" kindref="member">EigenTensors::Tensor3333d</ref><sp/><ref refid="namespaceMarmot_1_1ContinuumMechanics_1_1CommonTensors_1a488003e8a0f1a7cc17e2d27346b4aaea" kindref="member">IFourthOrderTranspose</ref><sp/>=<sp/><ref refid="namespaceMarmot_1_1ContinuumMechanics_1_1CommonTensors_1a7a0d6e2cef1957f9d6849c030048fe4f" kindref="member">Initialize_IFourthOrderTranspose</ref>();</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceMarmot_1_1EigenTensors_1aa4563649c16ed3f59d5f08265ab511f4" kindref="member">EigenTensors::Tensor3333d</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceMarmot_1_1ContinuumMechanics_1_1CommonTensors_1af1b7284bd72f72f5c1a8eba5ff2777cb" kindref="member">Initialize_dDeviatoricStress_dStress</ref>();</highlight></codeline>
<codeline lineno="53" refid="namespaceMarmot_1_1ContinuumMechanics_1_1CommonTensors_1ab61d497f8e353bb4bc27882c95128e9a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespaceMarmot_1_1EigenTensors_1aa4563649c16ed3f59d5f08265ab511f4" kindref="member">EigenTensors::Tensor3333d</ref><sp/><ref refid="namespaceMarmot_1_1ContinuumMechanics_1_1CommonTensors_1ab61d497f8e353bb4bc27882c95128e9a" kindref="member">dDeviatoricStress_dStress</ref><sp/>=<sp/><ref refid="namespaceMarmot_1_1ContinuumMechanics_1_1CommonTensors_1af1b7284bd72f72f5c1a8eba5ff2777cb" kindref="member">Initialize_dDeviatoricStress_dStress</ref>();</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceMarmot_1_1EigenTensors_1aafbb4d0fece119819f27bbf68b1f76b2" kindref="member">EigenTensors::Tensor333d</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceMarmot_1_1ContinuumMechanics_1_1CommonTensors_1a277603293083202670dea34ba8419f52" kindref="member">Initialize_LeviCivita3D</ref>();</highlight></codeline>
<codeline lineno="57" refid="namespaceMarmot_1_1ContinuumMechanics_1_1CommonTensors_1a127950653ef345e8a45df1e68393c6f1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespaceMarmot_1_1EigenTensors_1aafbb4d0fece119819f27bbf68b1f76b2" kindref="member">EigenTensors::Tensor333d</ref><sp/><ref refid="namespaceMarmot_1_1ContinuumMechanics_1_1CommonTensors_1a127950653ef345e8a45df1e68393c6f1" kindref="member">LeviCivita3D</ref><sp/>=<sp/><ref refid="namespaceMarmot_1_1ContinuumMechanics_1_1CommonTensors_1a277603293083202670dea34ba8419f52" kindref="member">Initialize_LeviCivita3D</ref>();</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceMarmot_1_1EigenTensors_1ae6396a012eda000f83593b9c567ad9f0" kindref="member">EigenTensors::Tensor122d</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceMarmot_1_1ContinuumMechanics_1_1CommonTensors_1aa71fa4e4ab90faf29c8b986cdd4d338f" kindref="member">Initialize_LeviCivita2D</ref>();</highlight></codeline>
<codeline lineno="60" refid="namespaceMarmot_1_1ContinuumMechanics_1_1CommonTensors_1ad015d8c33b0fa498d7d134ff5eef088c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespaceMarmot_1_1EigenTensors_1ae6396a012eda000f83593b9c567ad9f0" kindref="member">EigenTensors::Tensor122d</ref><sp/><ref refid="namespaceMarmot_1_1ContinuumMechanics_1_1CommonTensors_1ad015d8c33b0fa498d7d134ff5eef088c" kindref="member">LeviCivita2D</ref><sp/>=<sp/><ref refid="namespaceMarmot_1_1ContinuumMechanics_1_1CommonTensors_1aa71fa4e4ab90faf29c8b986cdd4d338f" kindref="member">Initialize_LeviCivita2D</ref>();</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceMarmot_1_1EigenTensors_1a947b6c4f78fa69504090bb3f782ccadc" kindref="member">EigenTensors::Tensor33d</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceMarmot_1_1ContinuumMechanics_1_1CommonTensors_1a7e62eda2768a59c6741e1c685bb025f8" kindref="member">Initialize_I2</ref>();</highlight></codeline>
<codeline lineno="63" refid="namespaceMarmot_1_1ContinuumMechanics_1_1CommonTensors_1a10408a9dd177b0db5d1090e60ebf7101" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespaceMarmot_1_1EigenTensors_1a947b6c4f78fa69504090bb3f782ccadc" kindref="member">EigenTensors::Tensor33d</ref><sp/><ref refid="namespaceMarmot_1_1ContinuumMechanics_1_1CommonTensors_1a10408a9dd177b0db5d1090e60ebf7101" kindref="member">I2</ref><sp/>=<sp/><ref refid="namespaceMarmot_1_1ContinuumMechanics_1_1CommonTensors_1a7e62eda2768a59c6741e1c685bb025f8" kindref="member">Initialize_I2</ref>();</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65" refid="namespaceMarmot_1_1ContinuumMechanics_1_1CommonTensors_1a5229823769d5624c62579865562937de" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="namespaceMarmot_1_1ContinuumMechanics_1_1CommonTensors_1a5229823769d5624c62579865562937de" kindref="member">getNumberOfDofForRotation</ref>(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nDim<sp/>)</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>nDim<sp/>==<sp/>2<sp/>)</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>3;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sizeI,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sizeJ<sp/>&gt;</highlight></codeline>
<codeline lineno="74" refid="namespaceMarmot_1_1ContinuumMechanics_1_1CommonTensors_1a7f73b30be7e214878bf9ce8e3daed929" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Matrix&lt;<sp/>double,<sp/>sizeI<sp/>*<sp/>sizeJ,<sp/>sizeI<sp/>*<sp/>sizeJ<sp/>&gt;<sp/><ref refid="namespaceMarmot_1_1ContinuumMechanics_1_1CommonTensors_1a7f73b30be7e214878bf9ce8e3daed929" kindref="member">makeIndexSwapTensor</ref>()</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Aux.<sp/>Matrix,<sp/>which<sp/>helps<sp/>to<sp/>swap<sp/>indices<sp/>in<sp/>Eigen::Matrices<sp/>abused<sp/>as<sp/>higher<sp/>order<sp/>Tensors<sp/>by</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>multiplication<sp/>,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>T_(ij)(kl)<sp/>*<sp/>IndexSwapTensor_(kl)(lk)<sp/>=<sp/>T_(ij)(lk)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>For<sp/>instance:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Matrix3d<sp/>t;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>t&lt;&lt;1,2,3,4,5,6,7,8,9;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>const<sp/>auto<sp/>P<sp/><sp/>=<sp/>makeIndexSwapTensor&lt;3,3&gt;();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>std::cout<sp/>&lt;&lt;<sp/>t.reshaped().transpose()<sp/>&lt;&lt;<sp/>std::endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>std::cout<sp/>&lt;&lt;<sp/>t.reshaped().transpose()<sp/>*<sp/>P<sp/>&lt;&lt;<sp/>std::endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Output:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>1,4,7,2,5,8,3,6,9</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>1,2,3,4,5,6,7,8,9</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Eigen::Matrix&lt;<sp/>double,<sp/>sizeI<sp/>*<sp/>sizeJ,<sp/>sizeI<sp/>*<sp/>sizeJ<sp/>&gt;<sp/>P;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>d<sp/>=<sp/>[](<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>a,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>b<sp/>)<sp/>-&gt;<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>a<sp/>==<sp/>b<sp/>?<sp/>1.0<sp/>:<sp/>0.0;<sp/>};</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>sizeI;<sp/>i++<sp/>)</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>sizeJ;<sp/>j++<sp/>)</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>l<sp/>=<sp/>0;<sp/>l<sp/>&lt;<sp/>sizeI;<sp/>l++<sp/>)</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k<sp/>=<sp/>0;<sp/>k<sp/>&lt;<sp/>sizeJ;<sp/>k++<sp/>)</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>P(<sp/>i<sp/>+<sp/>j<sp/>*<sp/>sizeI,<sp/>l<sp/>*<sp/>sizeJ<sp/>+<sp/>k<sp/>)<sp/>=<sp/>d(<sp/>i,<sp/>l<sp/>)<sp/>*<sp/>d(<sp/>k,<sp/>j<sp/>);</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>P;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nDim<sp/>&gt;</highlight></codeline>
<codeline lineno="109" refid="namespaceMarmot_1_1ContinuumMechanics_1_1CommonTensors_1a025b1717b8d0c6288b7dd4ae6dabb8b0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>Eigen::TensorFixedSize&lt;<sp/>double,<sp/>Eigen::Sizes&lt;<sp/><ref refid="namespaceMarmot_1_1ContinuumMechanics_1_1CommonTensors_1a5229823769d5624c62579865562937de" kindref="member">getNumberOfDofForRotation</ref>(<sp/>nDim<sp/>),<sp/>nDim,<sp/>nDim<sp/>&gt;<sp/>&gt;<sp/><ref refid="namespaceMarmot_1_1ContinuumMechanics_1_1CommonTensors_1a025b1717b8d0c6288b7dd4ae6dabb8b0" kindref="member">getReferenceToCorrectLeviCivita</ref>()</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>template<sp/>&lt;int<sp/>nDim&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>template<sp/>&lt;int<sp/>nDim=2&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>constexpr<sp/>Eigen::TensorFixedSize&lt;<sp/>double,<sp/>Eigen::Sizes&lt;getNumberOfDofForRotation<sp/>(nDim),<sp/>nDim,<sp/>nDim&gt;<sp/>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>getReferenceToCorrectLeviCivita()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>(<sp/>nDim<sp/>==<sp/>2<sp/>)</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespaceMarmot_1_1ContinuumMechanics_1_1CommonTensors_1ad015d8c33b0fa498d7d134ff5eef088c" kindref="member">LeviCivita2D</ref>;</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespaceMarmot_1_1ContinuumMechanics_1_1CommonTensors_1a127950653ef345e8a45df1e68393c6f1" kindref="member">LeviCivita3D</ref>;</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>ContinuumMechanics::CommonTensors</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="123" refid="namespaceMarmot_1_1ContinuumMechanics_1_1TensorUtility" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceMarmot_1_1ContinuumMechanics_1_1TensorUtility" kindref="compound">ContinuumMechanics::TensorUtility</ref><sp/>{</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="125" refid="namespaceMarmot_1_1ContinuumMechanics_1_1TensorUtility_1ac76ca261b9626ba6a928136181867c65" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="namespaceMarmot_1_1ContinuumMechanics_1_1TensorUtility_1ac76ca261b9626ba6a928136181867c65" kindref="member">d</ref>(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>a,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>b<sp/>)</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>a<sp/>==<sp/>b<sp/>?<sp/>1<sp/>:<sp/>0;</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x,</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y,</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>=<sp/>std::enable_if&lt;<sp/>!std::is_const&lt;<sp/>std::remove_reference&lt;<sp/>T<sp/>&gt;<sp/>&gt;::value<sp/>&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="134" refid="namespaceMarmot_1_1ContinuumMechanics_1_1TensorUtility_1adc57e3526c1cc6da8cf1b38a5126f7e0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="namespaceMarmot_1_1ContinuumMechanics_1_1TensorUtility_1adc57e3526c1cc6da8cf1b38a5126f7e0" kindref="member">as</ref>(<sp/>T&amp;<sp/>t<sp/>)</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Eigen::Map&lt;<sp/>Eigen::Matrix&lt;<sp/>typename<sp/>T::Scalar,<sp/>x,<sp/>y<sp/>&gt;<sp/>&gt;(<sp/>t.data()<sp/>);</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>=<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>&gt;</highlight></codeline>
<codeline lineno="140" refid="namespaceMarmot_1_1ContinuumMechanics_1_1TensorUtility_1aedbc0e8d8b29d1ed3c4969544a3a205c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="namespaceMarmot_1_1ContinuumMechanics_1_1TensorUtility_1adc57e3526c1cc6da8cf1b38a5126f7e0" kindref="member">as</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T&amp;<sp/>t<sp/>)</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Eigen::Map&lt;<sp/>const<sp/>Eigen::Matrix&lt;<sp/>typename<sp/>T::Scalar,<sp/>x,<sp/>y<sp/>&gt;<sp/>&gt;(<sp/>t.data()<sp/>);</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Derived,</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>=<sp/>std::enable_if&lt;<sp/>!std::is_const&lt;<sp/>std::remove_reference&lt;<sp/>Derived<sp/>&gt;<sp/>&gt;::value<sp/>&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="147" refid="namespaceMarmot_1_1ContinuumMechanics_1_1TensorUtility_1ad4d5c816b765ba019bdb1d1118e2f1ea" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="namespaceMarmot_1_1ContinuumMechanics_1_1TensorUtility_1ad4d5c816b765ba019bdb1d1118e2f1ea" kindref="member">flatten</ref>(<sp/>Derived&amp;<sp/>t<sp/>)</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Eigen::Map&lt;</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Eigen::Matrix&lt;<sp/>typename<sp/>Derived::Scalar,<sp/>Derived::RowsAtCompileTime<sp/>*<sp/>Derived::ColsAtCompileTime,<sp/>1<sp/>&gt;<sp/>&gt;(</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t.data()<sp/>);</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Derived,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>=<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>&gt;</highlight></codeline>
<codeline lineno="155" refid="namespaceMarmot_1_1ContinuumMechanics_1_1TensorUtility_1a95e1750e4b9a0f970117a71a7beee21f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="namespaceMarmot_1_1ContinuumMechanics_1_1TensorUtility_1ad4d5c816b765ba019bdb1d1118e2f1ea" kindref="member">flatten</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Derived&amp;<sp/>t<sp/>)</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Eigen::Map&lt;</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Eigen::Matrix&lt;<sp/>typename<sp/>Derived::Scalar,<sp/>Derived::RowsAtCompileTime<sp/>*<sp/>Derived::ColsAtCompileTime,<sp/>1<sp/>&gt;<sp/>&gt;(</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t.data()<sp/>);</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">...<sp/>Pairs<sp/>&gt;</highlight></codeline>
<codeline lineno="163" refid="namespaceMarmot_1_1ContinuumMechanics_1_1TensorUtility_1a55c5c241f3e174b5518f25e0310f6f1b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="namespaceMarmot_1_1ContinuumMechanics_1_1TensorUtility_1a55c5c241f3e174b5518f25e0310f6f1b" kindref="member">contractionDims</ref>()<sp/></highlight><highlight class="comment">//<sp/>should<sp/>be<sp/>evaluated<sp/>at<sp/>compile<sp/>time</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static_assert</highlight><highlight class="normal">(<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">...(<sp/>Pairs<sp/>)<sp/>%<sp/>2<sp/>==<sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;Pairs<sp/>must<sp/>contain<sp/>an<sp/>even<sp/>number<sp/>of<sp/>elements.&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numPairs<sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">...(<sp/>Pairs<sp/>)<sp/>/<sp/>2;</highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Eigen::array&lt;<sp/>Eigen::IndexPair&lt;<sp/>int<sp/>&gt;,<sp/>numPairs<sp/>&gt;<sp/>result{};</highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>(<sp/>numPairs<sp/>&gt;<sp/>0<sp/>)<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>return<sp/>empty<sp/>array<sp/>if<sp/>no<sp/>pairs<sp/>are<sp/>given</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>values[]<sp/>=<sp/>{<sp/>Pairs...<sp/>};<sp/></highlight><highlight class="comment">//<sp/>Pairs...<sp/>expands<sp/>the<sp/>parameter<sp/>pack</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Fill<sp/>the<sp/>result<sp/>array<sp/>at<sp/>compile-time</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>numPairs;<sp/>++i<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result[i]<sp/>=<sp/>{<sp/>values[2<sp/>*<sp/>i],<sp/>values[2<sp/>*<sp/>i<sp/>+<sp/>1]<sp/>};</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Matrix3d<sp/><ref refid="namespaceMarmot_1_1ContinuumMechanics_1_1TensorUtility_1a5cf70bc025ba0714a52d5bd0935a6230" kindref="member">dyadicProduct</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Eigen::Vector3d&amp;<sp/>vector1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Eigen::Vector3d&amp;<sp/>vector2<sp/>);</highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight></codeline>
<codeline lineno="184" refid="namespaceMarmot_1_1ContinuumMechanics_1_1TensorUtility_1_1IndexNotation" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceMarmot_1_1ContinuumMechanics_1_1TensorUtility_1_1IndexNotation" kindref="compound">IndexNotation</ref><sp/>{</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nDim<sp/>&gt;</highlight></codeline>
<codeline lineno="186" refid="namespaceMarmot_1_1ContinuumMechanics_1_1TensorUtility_1_1IndexNotation_1a0e7c0348949da50ad0055ea5e2aea72c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>std::pair&lt;<sp/>int,<sp/>int<sp/>&gt;<sp/><ref refid="namespaceMarmot_1_1ContinuumMechanics_1_1TensorUtility_1_1IndexNotation_1a0e7c0348949da50ad0055ea5e2aea72c" kindref="member">fromVoigt</ref>(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ij<sp/>)</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>(<sp/>nDim<sp/>==<sp/>1<sp/>)</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::pair&lt;<sp/>int,<sp/>int<sp/>&gt;(<sp/>0,<sp/>0<sp/>);</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>nDim<sp/>==<sp/>2<sp/>)</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(<sp/>ij<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::pair&lt;<sp/>int,<sp/>int<sp/>&gt;(<sp/>0,<sp/>0<sp/>);</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>1:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::pair&lt;<sp/>int,<sp/>int<sp/>&gt;(<sp/>1,<sp/>1<sp/>);</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>2:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::pair&lt;<sp/>int,<sp/>int<sp/>&gt;(<sp/>0,<sp/>1<sp/>);</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>nDim<sp/>==<sp/>3<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(<sp/>ij<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::pair&lt;<sp/>int,<sp/>int<sp/>&gt;(<sp/>0,<sp/>0<sp/>);</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>1:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::pair&lt;<sp/>int,<sp/>int<sp/>&gt;(<sp/>1,<sp/>1<sp/>);</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>2:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::pair&lt;<sp/>int,<sp/>int<sp/>&gt;(<sp/>2,<sp/>2<sp/>);</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>3:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::pair&lt;<sp/>int,<sp/>int<sp/>&gt;(<sp/>0,<sp/>1<sp/>);</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>4:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::pair&lt;<sp/>int,<sp/>int<sp/>&gt;(<sp/>0,<sp/>2<sp/>);</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>5:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::pair&lt;<sp/>int,<sp/>int<sp/>&gt;(<sp/>1,<sp/>2<sp/>);</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::invalid_argument(<sp/><ref refid="classMakeString" kindref="compound">MakeString</ref>()</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>__PRETTY_FUNCTION__<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;:<sp/>invalid<sp/>dimension<sp/>/<sp/>voigt<sp/>index<sp/>specified&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nDim<sp/>&gt;</highlight></codeline>
<codeline lineno="213" refid="namespaceMarmot_1_1ContinuumMechanics_1_1TensorUtility_1_1IndexNotation_1a930cfeffbe0dc8d4266f80cacae0e1da" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="namespaceMarmot_1_1ContinuumMechanics_1_1TensorUtility_1_1IndexNotation_1a930cfeffbe0dc8d4266f80cacae0e1da" kindref="member">toVoigt</ref>(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>)</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>(<sp/>nDim<sp/>==<sp/>1<sp/>)</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>nDim<sp/>==<sp/>2<sp/>)</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<sp/>i<sp/>==<sp/>j<sp/>)<sp/>?<sp/>(<sp/>i<sp/>==<sp/>0<sp/>?<sp/>0<sp/>:<sp/>1<sp/>)<sp/>:<sp/>2;</highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>nDim<sp/>==<sp/>3<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tensor2VoigtNotationIndicesMapping[3][3]<sp/>=<sp/>{<sp/>{<sp/>0,<sp/>3,<sp/>4<sp/>},<sp/>{<sp/>3,<sp/>1,<sp/>5<sp/>},<sp/>{<sp/>4,<sp/>5,<sp/>2<sp/>}<sp/>};</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tensor2VoigtNotationIndicesMapping[i][j];</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::invalid_argument(<sp/><ref refid="classMakeString" kindref="compound">MakeString</ref>()<sp/>&lt;&lt;<sp/>__PRETTY_FUNCTION__<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;:<sp/>invalid<sp/>dimension<sp/>specified&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nDim<sp/>&gt;</highlight></codeline>
<codeline lineno="229" refid="namespaceMarmot_1_1ContinuumMechanics_1_1TensorUtility_1_1IndexNotation_1a033d62bc36b10a471ec07373704850cc" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Eigen::TensorFixedSize&lt;<sp/>double,<sp/>Eigen::Sizes&lt;<sp/><ref refid="MarmotVoigt_8h_1ab05a2676268f62bf9214105a0fe8e614" kindref="member">VOIGTFROMDIM</ref>(<sp/>nDim<sp/>),<sp/>nDim,<sp/>nDim<sp/>&gt;<sp/>&gt;<sp/><ref refid="namespaceMarmot_1_1ContinuumMechanics_1_1TensorUtility_1_1IndexNotation_1a033d62bc36b10a471ec07373704850cc" kindref="member">voigtMap</ref>()</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">Eigen;</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Eigen::TensorFixedSize&lt;<sp/>double,<sp/>Eigen::Sizes&lt;<sp/><ref refid="MarmotVoigt_8h_1ab05a2676268f62bf9214105a0fe8e614" kindref="member">VOIGTFROMDIM</ref>(<sp/>nDim<sp/>),<sp/>nDim,<sp/>nDim<sp/>&gt;<sp/>&gt;<sp/>result;</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result.setZero();</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>nDim;<sp/>i++<sp/>)</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>nDim;<sp/>j++<sp/>)</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result(<sp/><ref refid="namespaceMarmot_1_1ContinuumMechanics_1_1TensorUtility_1_1IndexNotation_1a930cfeffbe0dc8d4266f80cacae0e1da" kindref="member">toVoigt&lt; nDim &gt;</ref>(<sp/>i,<sp/>j<sp/>),<sp/>i,<sp/>j<sp/>)<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="239"><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>IndexNotation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>ContinuumMechanics::VoigtNotation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>ContinuumMechanics::TensorUtility</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>Marmot</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/home/runner/work/Marmot/Marmot/modules/core/MarmotMathCore/include/Marmot/MarmotTensor.h"/>
  </compounddef>
</doxygen>

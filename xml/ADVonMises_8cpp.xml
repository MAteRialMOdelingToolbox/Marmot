<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="ADVonMises_8cpp" kind="file" language="C++">
    <compoundname>ADVonMises.cpp</compoundname>
    <includes refid="ADVonMises_8h" local="yes">Marmot/ADVonMises.h</includes>
    <includes refid="ADVonMisesConstants_8h" local="yes">Marmot/ADVonMisesConstants.h</includes>
    <includes refid="MarmotAutomaticDifferentiation_8h" local="yes">Marmot/MarmotAutomaticDifferentiation.h</includes>
    <includes refid="MarmotConstants_8h" local="yes">Marmot/MarmotConstants.h</includes>
    <includes refid="MarmotElasticity_8h" local="yes">Marmot/MarmotElasticity.h</includes>
    <includes refid="MarmotJournal_8h" local="yes">Marmot/MarmotJournal.h</includes>
    <includes refid="MarmotMath_8h" local="yes">Marmot/MarmotMath.h</includes>
    <includes refid="MarmotTypedefs_8h" local="yes">Marmot/MarmotTypedefs.h</includes>
    <includes refid="MarmotUtility_8h" local="yes">Marmot/MarmotUtility.h</includes>
    <includes refid="MarmotVoigt_8h" local="yes">Marmot/MarmotVoigt.h</includes>
    <includes local="yes">autodiff/forward/dual.hpp</includes>
    <includes local="yes">autodiff/forward/dual/eigen.hpp</includes>
    <includes local="no">autodiff/forward/dual/dual.hpp</includes>
    <incdepgraph>
      <node id="29">
        <label>Marmot/MarmotJournal.h</label>
        <link refid="MarmotJournal_8h"/>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>Marmot/MarmotMaterial.h</label>
        <link refid="MarmotMaterial_8h"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>Marmot/MarmotUtils.h</label>
        <link refid="MarmotUtils_8h"/>
      </node>
      <node id="23">
        <label>Marmot/MarmotAutomaticDifferentiation.h</label>
        <link refid="MarmotAutomaticDifferentiation_8h"/>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>Marmot/MarmotConstants.h</label>
        <link refid="MarmotConstants_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="31">
        <label>Marmot/MarmotMath.h</label>
        <link refid="MarmotMath_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>Marmot/MarmotTypedefs.h</label>
        <link refid="MarmotTypedefs_8h"/>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="27">
        <label>Marmot/MarmotElasticity.h</label>
        <link refid="MarmotElasticity_8h"/>
        <childnode refid="28" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>Marmot/MarmotMaterialHypoElastic.h</label>
        <link refid="MarmotMaterialHypoElastic_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>Marmot/MarmotMaterialHypoElasticAD.h</label>
        <link refid="MarmotMaterialHypoElasticAD_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>Marmot/MarmotMaterialMechanical.h</label>
        <link refid="MarmotMaterialMechanical_8h"/>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>Marmot/MarmotStateVarVectorManager.h</label>
        <link refid="MarmotStateVarVectorManager_8h"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="35">
        <label>Marmot/MarmotUtility.h</label>
        <link refid="MarmotUtility_8h"/>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="28">
        <label>Marmot/MarmotVoigt.h</label>
        <link refid="MarmotVoigt_8h"/>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>Marmot/ADVonMises.h</label>
        <link refid="ADVonMises_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="22">
        <label>Marmot/ADVonMisesConstants.h</label>
        <link refid="ADVonMisesConstants_8h"/>
      </node>
      <node id="1">
        <label>/home/runner/work/Marmot/Marmot/modules/materials/ADVonMises/src/ADVonMises.cpp</label>
        <link refid="ADVonMises_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
      </node>
      <node id="17">
        <label>Eigen/Core</label>
      </node>
      <node id="18">
        <label>Eigen/Dense</label>
      </node>
      <node id="20">
        <label>Eigen/src/Core/Map.h</label>
      </node>
      <node id="33">
        <label>algorithm</label>
      </node>
      <node id="11">
        <label>autodiff/forward/dual.hpp</label>
      </node>
      <node id="25">
        <label>autodiff/forward/dual/dual.hpp</label>
      </node>
      <node id="24">
        <label>autodiff/forward/dual/eigen.hpp</label>
      </node>
      <node id="32">
        <label>autodiff/forward/real.hpp</label>
      </node>
      <node id="4">
        <label>cmath</label>
      </node>
      <node id="34">
        <label>complex</label>
      </node>
      <node id="26">
        <label>functional</label>
      </node>
      <node id="21">
        <label>iostream</label>
      </node>
      <node id="13">
        <label>memory</label>
      </node>
      <node id="30">
        <label>sstream</label>
      </node>
      <node id="10">
        <label>string</label>
      </node>
      <node id="14">
        <label>unordered_map</label>
      </node>
      <node id="19">
        <label>unsupported/Eigen/CXX11/Tensor</label>
      </node>
      <node id="15">
        <label>vector</label>
      </node>
    </incdepgraph>
    <innernamespace refid="namespaceMarmot">Marmot</innernamespace>
    <innernamespace refid="namespaceMarmot_1_1Materials">Marmot::Materials</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;<ref refid="ADVonMises_8h" kindref="compound">Marmot/ADVonMises.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="ADVonMisesConstants_8h" kindref="compound">Marmot/ADVonMisesConstants.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="MarmotAutomaticDifferentiation_8h" kindref="compound">Marmot/MarmotAutomaticDifferentiation.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="MarmotConstants_8h" kindref="compound">Marmot/MarmotConstants.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="MarmotElasticity_8h" kindref="compound">Marmot/MarmotElasticity.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="MarmotJournal_8h" kindref="compound">Marmot/MarmotJournal.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="MarmotMath_8h" kindref="compound">Marmot/MarmotMath.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="MarmotTypedefs_8h" kindref="compound">Marmot/MarmotTypedefs.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="MarmotUtility_8h" kindref="compound">Marmot/MarmotUtility.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="MarmotVoigt_8h" kindref="compound">Marmot/MarmotVoigt.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;autodiff/forward/dual.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;autodiff/forward/dual/eigen.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;autodiff/forward/dual/dual.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceMarmot_1_1Materials" kindref="compound">Marmot::Materials</ref><sp/>{</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">Marmot;</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">autodiff;</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">Eigen;</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">ContinuumMechanics::Elasticity;</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><ref refid="classMarmot_1_1Materials_1_1ADVonMises_1aaf81f4ad3a7feb0d3f52ccff6a8fa623" kindref="member">ADVonMises::ADVonMises</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>materialProperties,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nMaterialProperties,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>materialNumber<sp/>)</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>MarmotMaterialHypoElasticAD::MarmotMaterialHypoElasticAD(<sp/>materialProperties,</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nMaterialProperties,</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>materialNumber<sp/>),</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceMarmot_1_1ContinuumMechanics_1_1Elasticity_1_1Isotropic_1a207668a6ab28d4375b6a96ce4557d1b6" kindref="member">E</ref>(<sp/>materialProperties[0]<sp/>),</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceMarmot_1_1ContinuumMechanics_1_1Elasticity_1_1Isotropic_1a9816087f223afacacbc1361ae03ef2a2" kindref="member">nu</ref>(<sp/>materialProperties[1]<sp/>),</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>yieldStress(<sp/>materialProperties[2]<sp/>),</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>HLin(<sp/>materialProperties[3]<sp/>),</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>deltaYieldStress(<sp/>materialProperties[4]<sp/>),</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>delta(<sp/>materialProperties[5]<sp/>),</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>G(<sp/><ref refid="namespaceMarmot_1_1ContinuumMechanics_1_1Elasticity_1_1Isotropic_1a207668a6ab28d4375b6a96ce4557d1b6" kindref="member">E</ref><sp/>/<sp/>(<sp/>2.<sp/>*<sp/>(<sp/>1.<sp/>+<sp/><ref refid="namespaceMarmot_1_1ContinuumMechanics_1_1Elasticity_1_1Isotropic_1a9816087f223afacacbc1361ae03ef2a2" kindref="member">nu</ref><sp/>)<sp/>)<sp/>)</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(<sp/>nMaterialProperties<sp/>==<sp/>6<sp/>);</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ADVonMises::assignStateVars(<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>stateVars,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nStateVars<sp/>)</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>nStateVars<sp/>&lt;<sp/>getNumberOfRequiredStateVars()<sp/>)</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::invalid_argument(<sp/><ref refid="classMakeString" kindref="compound">MakeString</ref>()<sp/>&lt;&lt;<sp/>__PRETTY_FUNCTION__<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;:<sp/>Not<sp/>sufficient<sp/>stateVars!&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/>managedStateVars<sp/>=<sp/>std::make_unique&lt;<sp/>ADVonMisesModelStateVarManager<sp/>&gt;(<sp/>stateVars<sp/>);</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classMarmotMaterial_1a9644446a593632d0da2462bdeb43e25c" kindref="member">MarmotMaterialHypoElasticAD::assignStateVars</ref>(<sp/>stateVars,<sp/>nStateVars<sp/>);</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><ref refid="structStateView" kindref="compound">StateView</ref><sp/>ADVonMises::getStateView(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>stateName<sp/>)</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>managedStateVars-&gt;getStateView(<sp/>stateName<sp/>);</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ADVonMises::computeStressAD(<sp/>autodiff::dual*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>stress,</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>autodiff::dual*<sp/>dStrain,</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>timeOld,</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dT,</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pNewDT<sp/>)</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">Vector6dual<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>Eigen::Matrix&lt;<sp/>dual,<sp/>6,<sp/>1<sp/>&gt;;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">mVector6dual<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>Eigen::Map&lt;<sp/>Vector6dual<sp/>&gt;;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">mVector6dualConst<sp/>=<sp/>Eigen::Map&lt;<sp/>const<sp/>Vector6dual<sp/>&gt;;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/>mVector6dual<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>S(<sp/>stress<sp/>);</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>mVector6dualConst<sp/>dE(<sp/>dStrain<sp/>);</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>compute<sp/>elastic<sp/>stiffness</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespaceMarmot_1a48144b7616079807fd550c92d142e9da" kindref="member">Matrix6d</ref><sp/>Cel<sp/>=<sp/><ref refid="namespaceMarmot_1_1ContinuumMechanics_1_1Elasticity_1_1Isotropic_1a8c6fc02e9c8552d1be0bf5135e5cab1f" kindref="member">ContinuumMechanics::Elasticity::Isotropic::stiffnessTensor</ref>(<sp/>E,<sp/>nu<sp/>);</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>get<sp/>current<sp/>hardening<sp/>variable</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;<sp/>kappa<sp/>=<sp/>managedStateVars-&gt;kappa;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>compute<sp/>elastic<sp/>predictor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Vector6dual<sp/>trialStress<sp/>=<sp/>S<sp/>+<sp/>Cel<sp/>*<sp/>dE;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceMarmot_1_1ContinuumMechanics_1_1VoigtNotation" kindref="compound">ContinuumMechanics::VoigtNotation</ref>;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>dual<sp/>rhoTrial<sp/>=<sp/>sqrt(<sp/>2.<sp/>*<sp/>Invariants::J2(<sp/>trialStress<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/><ref refid="namespaceMarmot_1_1Math_1a335a5f714ab10341744d8fea021e08dd" kindref="member">Math::makeReal</ref>(<sp/>f(<sp/>rhoTrial,<sp/>kappa<sp/>)<sp/>)<sp/>&gt;=<sp/>0.0<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>variables<sp/>for<sp/>return<sp/>mapping</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>counter<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>dual<sp/><sp/><sp/>dKappa(<sp/>0.0<sp/>);</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>dual<sp/><sp/><sp/>dLambda(<sp/>0.0<sp/>);</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>dg_ddKappa(<sp/>0.0<sp/>);</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(<sp/>abs(<sp/>g(<sp/>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)rhoTrial,<sp/>kappa,<sp/>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)dKappa<sp/>)<sp/>)<sp/>&gt;<sp/>ADVonMisesConstants::innerNewtonTol<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>counter<sp/>==<sp/>ADVonMisesConstants::nMaxInnerNewtonCycles<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pNewDT<sp/>=<sp/>0.25;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>compute<sp/>derivative<sp/>of<sp/>g<sp/>wrt<sp/>kappa<sp/>at<sp/>constant<sp/>rhoTrial</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dual<sp/>dKappa_(<sp/>dKappa<sp/>);</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>seed&lt;<sp/>1<sp/>&gt;(<sp/>dKappa_,<sp/>1.0<sp/>);</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dg_ddKappa<sp/>=<sp/>derivative&lt;<sp/>1<sp/>&gt;(<sp/>g(<sp/>dual(<sp/>rhoTrial.val<sp/>),<sp/>kappa,<sp/>dKappa_<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>update<sp/>dKappa<sp/>and<sp/>iteration<sp/>counter</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dKappa<sp/>-=<sp/>g(<sp/>rhoTrial,<sp/>kappa,<sp/>dKappa<sp/>)<sp/>/<sp/>dg_ddKappa;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>counter<sp/>+=<sp/>1;</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>compute<sp/>plastic<sp/>corrector</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>dLambda<sp/>=<sp/><ref refid="namespaceMarmot_1_1Constants_1af949a37ecd57fa12162d8e8326f4a271" kindref="member">Constants::sqrt3_2</ref><sp/>*<sp/>dKappa;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>compute<sp/>return<sp/>mapping<sp/>direction</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Vector6dual<sp/>n<sp/>=<sp/><ref refid="namespaceMarmot_1_1ContinuumMechanics_1_1VoigtNotation_1a37017d3a6a002dee6ca7127fc7f42736" kindref="member">ContinuumMechanics::VoigtNotation::IDev</ref><sp/>*<sp/>trialStress<sp/>/<sp/>rhoTrial;</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>update<sp/>stress<sp/>and<sp/>hardening<sp/>variable</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>S<sp/>=<sp/>trialStress<sp/>-<sp/>2.<sp/>*<sp/>G<sp/>*<sp/>dLambda<sp/>*<sp/>n;</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>kappa<sp/>+=<sp/>dKappa.val;</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>elastic<sp/>step</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>S<sp/>=<sp/>trialStress;</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="115"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>Marmot::Materials</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/home/runner/work/Marmot/Marmot/modules/materials/ADVonMises/src/ADVonMises.cpp"/>
  </compounddef>
</doxygen>

<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="namespace_marmot_1_1_continuum_mechanics_1_1_tensor_utility_1_1_index_notation" kind="namespace" language="C++">
    <compoundname>Marmot::ContinuumMechanics::TensorUtility::IndexNotation</compoundname>
    <sectiondef kind="func">
      <memberdef kind="function" id="_marmot_tensor_8h_1a0e7c0348949da50ad0055ea5e2aea72c" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>int</type>
            <declname>nDim</declname>
            <defname>nDim</defname>
          </param>
        </templateparamlist>
        <type>std::pair&lt; int, int &gt;</type>
        <definition>std::pair&lt; int, int &gt; Marmot::ContinuumMechanics::TensorUtility::IndexNotation::fromVoigt</definition>
        <argsstring>(int ij)</argsstring>
        <name>fromVoigt</name>
        <qualifiedname>Marmot::ContinuumMechanics::TensorUtility::IndexNotation::fromVoigt</qualifiedname>
        <param>
          <type>int</type>
          <declname>ij</declname>
        </param>
        <briefdescription>
<para>Convert a Voigt index to tensor indices. </para>
        </briefdescription>
        <detaileddescription>
<para>Maps a Voigt notation index <computeroutput>ij</computeroutput> to the corresponding <computeroutput>(i, j)</computeroutput> tensor indices for a given dimension <computeroutput>nDim</computeroutput>.</para>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>nDim</parametername>
</parameternamelist>
<parameterdescription>
<para>Problem dimension (1, 2, or 3). </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ij</parametername>
</parameternamelist>
<parameterdescription>
<para>Voigt index. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Pair of tensor indices (i, j). </para>
</simplesect>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>std::invalid_argument</parametername>
</parameternamelist>
<parameterdescription>
<para>if <computeroutput>nDim</computeroutput> or <computeroutput>ij</computeroutput> is invalid. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/Marmot/Marmot/modules/core/MarmotMathCore/include/Marmot/MarmotTensor.h" line="363" column="27" bodyfile="/home/runner/work/Marmot/Marmot/modules/core/MarmotMathCore/include/Marmot/MarmotTensor.h" bodystart="363" bodyend="387"/>
      </memberdef>
      <memberdef kind="function" id="_marmot_tensor_8h_1a930cfeffbe0dc8d4266f80cacae0e1da" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>int</type>
            <declname>nDim</declname>
            <defname>nDim</defname>
          </param>
        </templateparamlist>
        <type>int</type>
        <definition>int Marmot::ContinuumMechanics::TensorUtility::IndexNotation::toVoigt</definition>
        <argsstring>(int i, int j)</argsstring>
        <name>toVoigt</name>
        <qualifiedname>Marmot::ContinuumMechanics::TensorUtility::IndexNotation::toVoigt</qualifiedname>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <param>
          <type>int</type>
          <declname>j</declname>
        </param>
        <briefdescription>
<para>Maps tensor indices (i, j) to the corresponding Voigt notation index for a given dimension <computeroutput>nDim</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>nDim</parametername>
</parameternamelist>
<parameterdescription>
<para>Problem dimension (1, 2, or 3). </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>i</parametername>
</parameternamelist>
<parameterdescription>
<para>Row index of the tensor. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>j</parametername>
</parameternamelist>
<parameterdescription>
<para>Column index of the tensor. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Voigt index corresponding to (i, j). </para>
</simplesect>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>std::invalid_argument</parametername>
</parameternamelist>
<parameterdescription>
<para>if <computeroutput>nDim</computeroutput> is invalid. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/Marmot/Marmot/modules/core/MarmotMathCore/include/Marmot/MarmotTensor.h" line="400" column="21" bodyfile="/home/runner/work/Marmot/Marmot/modules/core/MarmotMathCore/include/Marmot/MarmotTensor.h" bodystart="400" bodyend="413"/>
      </memberdef>
      <memberdef kind="function" id="_marmot_tensor_8h_1a033d62bc36b10a471ec07373704850cc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>int</type>
            <declname>nDim</declname>
            <defname>nDim</defname>
          </param>
        </templateparamlist>
        <type>Eigen::TensorFixedSize&lt; double, Eigen::Sizes&lt; VOIGTFROMDIM(nDim), nDim, nDim &gt; &gt;</type>
        <definition>Eigen::TensorFixedSize&lt; double, Eigen::Sizes&lt; VOIGTFROMDIM(nDim), nDim, nDim &gt; &gt; Marmot::ContinuumMechanics::TensorUtility::IndexNotation::voigtMap</definition>
        <argsstring>()</argsstring>
        <name>voigtMap</name>
        <qualifiedname>Marmot::ContinuumMechanics::TensorUtility::IndexNotation::voigtMap</qualifiedname>
        <briefdescription>
<para>Construct the Voigt mapping tensor. </para>
        </briefdescription>
        <detaileddescription>
<para>Creates a 3rd-order tensor that maps tensor indices (i, j) to their corresponding Voigt index. Each entry is 1 at <computeroutput>(toVoigt&lt;nDim&gt;(i, j), i, j)</computeroutput> and 0 elsewhere.</para>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>nDim</parametername>
</parameternamelist>
<parameterdescription>
<para>Problem dimension (1, 2, or 3). </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A tensor of shape (VoigtSize, nDim, nDim) encoding the Voigt mapping. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/Marmot/Marmot/modules/core/MarmotMathCore/include/Marmot/MarmotTensor.h" line="427" column="30" bodyfile="/home/runner/work/Marmot/Marmot/modules/core/MarmotMathCore/include/Marmot/MarmotTensor.h" bodystart="427" bodyend="436"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/runner/work/Marmot/Marmot/modules/core/MarmotMathCore/include/Marmot/MarmotTensor.h" line="350" column="5"/>
  </compounddef>
</doxygen>

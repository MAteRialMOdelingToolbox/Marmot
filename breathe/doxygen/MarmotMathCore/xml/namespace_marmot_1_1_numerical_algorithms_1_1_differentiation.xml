<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="namespace_marmot_1_1_numerical_algorithms_1_1_differentiation" kind="namespace" language="C++">
    <compoundname>Marmot::NumericalAlgorithms::Differentiation</compoundname>
    <innernamespace refid="namespace_marmot_1_1_numerical_algorithms_1_1_differentiation_1_1_complex">Marmot::NumericalAlgorithms::Differentiation::Complex</innernamespace>
    <innernamespace refid="namespace_marmot_1_1_numerical_algorithms_1_1_differentiation_1_1_scalar_to_tensor">Marmot::NumericalAlgorithms::Differentiation::ScalarToTensor</innernamespace>
    <innernamespace refid="namespace_marmot_1_1_numerical_algorithms_1_1_differentiation_1_1_tensor_to_scalar">Marmot::NumericalAlgorithms::Differentiation::TensorToScalar</innernamespace>
    <innernamespace refid="namespace_marmot_1_1_numerical_algorithms_1_1_differentiation_1_1_tensor_to_tensor">Marmot::NumericalAlgorithms::Differentiation::TensorToTensor</innernamespace>
    <sectiondef kind="typedef">
      <memberdef kind="typedef" id="_marmot_numerical_differentiation_8h_1a3589bd8fc3e0c821b0e51a9594ebc306" prot="public" static="no">
        <type>std::function&lt; double(const double x) &gt;</type>
        <definition>using Marmot::NumericalAlgorithms::Differentiation::scalar_to_scalar_function_type =  std::function&lt; double( const double x ) &gt;</definition>
        <argsstring></argsstring>
        <name>scalar_to_scalar_function_type</name>
        <qualifiedname>Marmot::NumericalAlgorithms::Differentiation::scalar_to_scalar_function_type</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/Marmot/Marmot/modules/core/MarmotMathCore/include/Marmot/MarmotNumericalDifferentiation.h" line="36" column="5" bodyfile="/home/runner/work/Marmot/Marmot/modules/core/MarmotMathCore/include/Marmot/MarmotNumericalDifferentiation.h" bodystart="36" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="_marmot_numerical_differentiation_8h_1ac9b0be30ffd7559ab0a92eea4ee75f72" prot="public" static="no">
        <type>std::function&lt; Eigen::VectorXd(const Eigen::VectorXd &amp;X) &gt;</type>
        <definition>using Marmot::NumericalAlgorithms::Differentiation::vector_to_vector_function_type =  std::function&lt; Eigen::VectorXd( const Eigen::VectorXd&amp; X ) &gt;</definition>
        <argsstring></argsstring>
        <name>vector_to_vector_function_type</name>
        <qualifiedname>Marmot::NumericalAlgorithms::Differentiation::vector_to_vector_function_type</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/Marmot/Marmot/modules/core/MarmotMathCore/include/Marmot/MarmotNumericalDifferentiation.h" line="37" column="5" bodyfile="/home/runner/work/Marmot/Marmot/modules/core/MarmotMathCore/include/Marmot/MarmotNumericalDifferentiation.h" bodystart="37" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="func">
      <memberdef kind="function" id="_marmot_numerical_differentiation_8h_1a3e2d0865fdcd10da6e0b263f686c4858" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double Marmot::NumericalAlgorithms::Differentiation::forwardDifference</definition>
        <argsstring>(const scalar_to_scalar_function_type &amp;f, const double x)</argsstring>
        <name>forwardDifference</name>
        <qualifiedname>Marmot::NumericalAlgorithms::Differentiation::forwardDifference</qualifiedname>
        <param>
          <type>const scalar_to_scalar_function_type &amp;</type>
          <declname>f</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/Marmot/Marmot/modules/core/MarmotMathCore/include/Marmot/MarmotNumericalDifferentiation.h" line="39" column="12" declfile="/home/runner/work/Marmot/Marmot/modules/core/MarmotMathCore/include/Marmot/MarmotNumericalDifferentiation.h" declline="39" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="_marmot_numerical_differentiation_8h_1a7de02aa48201ccdb190450dcfd34fa97" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double Marmot::NumericalAlgorithms::Differentiation::centralDifference</definition>
        <argsstring>(const scalar_to_scalar_function_type &amp;f, const double x)</argsstring>
        <name>centralDifference</name>
        <qualifiedname>Marmot::NumericalAlgorithms::Differentiation::centralDifference</qualifiedname>
        <param>
          <type>const scalar_to_scalar_function_type &amp;</type>
          <declname>f</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/Marmot/Marmot/modules/core/MarmotMathCore/include/Marmot/MarmotNumericalDifferentiation.h" line="40" column="12" declfile="/home/runner/work/Marmot/Marmot/modules/core/MarmotMathCore/include/Marmot/MarmotNumericalDifferentiation.h" declline="40" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="_marmot_numerical_differentiation_8h_1ac30aa22a7012705933cae722441e8405" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Eigen::MatrixXd</type>
        <definition>Eigen::MatrixXd Marmot::NumericalAlgorithms::Differentiation::forwardDifference</definition>
        <argsstring>(const vector_to_vector_function_type &amp;F, const Eigen::VectorXd &amp;X)</argsstring>
        <name>forwardDifference</name>
        <qualifiedname>Marmot::NumericalAlgorithms::Differentiation::forwardDifference</qualifiedname>
        <param>
          <type>const vector_to_vector_function_type &amp;</type>
          <declname>F</declname>
        </param>
        <param>
          <type>const Eigen::VectorXd &amp;</type>
          <declname>X</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/Marmot/Marmot/modules/core/MarmotMathCore/include/Marmot/MarmotNumericalDifferentiation.h" line="42" column="21" declfile="/home/runner/work/Marmot/Marmot/modules/core/MarmotMathCore/include/Marmot/MarmotNumericalDifferentiation.h" declline="42" declcolumn="21"/>
      </memberdef>
      <memberdef kind="function" id="_marmot_numerical_differentiation_8h_1a9d471ea1961edac3a8c0b7883db494f5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Eigen::MatrixXd</type>
        <definition>Eigen::MatrixXd Marmot::NumericalAlgorithms::Differentiation::centralDifference</definition>
        <argsstring>(const vector_to_vector_function_type &amp;F, const Eigen::VectorXd &amp;X)</argsstring>
        <name>centralDifference</name>
        <qualifiedname>Marmot::NumericalAlgorithms::Differentiation::centralDifference</qualifiedname>
        <param>
          <type>const vector_to_vector_function_type &amp;</type>
          <declname>F</declname>
        </param>
        <param>
          <type>const Eigen::VectorXd &amp;</type>
          <declname>X</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/Marmot/Marmot/modules/core/MarmotMathCore/include/Marmot/MarmotNumericalDifferentiation.h" line="43" column="21" declfile="/home/runner/work/Marmot/Marmot/modules/core/MarmotMathCore/include/Marmot/MarmotNumericalDifferentiation.h" declline="43" declcolumn="21"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/runner/work/Marmot/Marmot/modules/core/MarmotMathCore/include/Marmot/MarmotNumericalDifferentiationForFastor.h" line="40" column="3"/>
  </compounddef>
</doxygen>

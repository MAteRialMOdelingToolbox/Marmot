<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="namespace_marmot_1_1_continuum_mechanics_1_1_tensor_utility" kind="namespace" language="C++">
    <compoundname>Marmot::ContinuumMechanics::TensorUtility</compoundname>
    <innernamespace refid="namespace_marmot_1_1_continuum_mechanics_1_1_tensor_utility_1_1_index_notation">Marmot::ContinuumMechanics::TensorUtility::IndexNotation</innernamespace>
    <innernamespace refid="namespace_marmot_1_1_continuum_mechanics_1_1_tensor_utility_1_1_tensor_exponential">Marmot::ContinuumMechanics::TensorUtility::TensorExponential</innernamespace>
    <sectiondef kind="func">
      <memberdef kind="function" id="_marmot_tensor_8h_1ac76ca261b9626ba6a928136181867c65" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int Marmot::ContinuumMechanics::TensorUtility::d</definition>
        <argsstring>(int a, int b)</argsstring>
        <name>d</name>
        <qualifiedname>Marmot::ContinuumMechanics::TensorUtility::d</qualifiedname>
        <param>
          <type>int</type>
          <declname>a</declname>
        </param>
        <param>
          <type>int</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/Marmot/Marmot/modules/core/MarmotMathCore/include/Marmot/MarmotTensor.h" line="125" column="19" bodyfile="/home/runner/work/Marmot/Marmot/modules/core/MarmotMathCore/include/Marmot/MarmotTensor.h" bodystart="125" bodyend="128"/>
      </memberdef>
      <memberdef kind="function" id="_marmot_tensor_8h_1adc57e3526c1cc6da8cf1b38a5126f7e0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>int</type>
            <declname>x</declname>
            <defname>x</defname>
          </param>
          <param>
            <type>int</type>
            <declname>y</declname>
            <defname>y</defname>
          </param>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>typename</type>
            <defval>std::enable_if&lt; !std::is_const&lt; std::remove_reference&lt; T &gt; &gt;::value &gt;</defval>
          </param>
        </templateparamlist>
        <type>auto</type>
        <definition>auto Marmot::ContinuumMechanics::TensorUtility::as</definition>
        <argsstring>(T &amp;t)</argsstring>
        <name>as</name>
        <qualifiedname>Marmot::ContinuumMechanics::TensorUtility::as</qualifiedname>
        <param>
          <type>T &amp;</type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/Marmot/Marmot/modules/core/MarmotMathCore/include/Marmot/MarmotTensor.h" line="134" column="10" bodyfile="/home/runner/work/Marmot/Marmot/modules/core/MarmotMathCore/include/Marmot/MarmotTensor.h" bodystart="134" bodyend="137"/>
      </memberdef>
      <memberdef kind="function" id="_marmot_tensor_8h_1aedbc0e8d8b29d1ed3c4969544a3a205c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>int</type>
            <declname>x</declname>
            <defname>x</defname>
          </param>
          <param>
            <type>int</type>
            <declname>y</declname>
            <defname>y</defname>
          </param>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>typename</type>
            <defval>void</defval>
          </param>
        </templateparamlist>
        <type>auto</type>
        <definition>auto Marmot::ContinuumMechanics::TensorUtility::as</definition>
        <argsstring>(const T &amp;t)</argsstring>
        <name>as</name>
        <qualifiedname>Marmot::ContinuumMechanics::TensorUtility::as</qualifiedname>
        <param>
          <type>const T &amp;</type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/Marmot/Marmot/modules/core/MarmotMathCore/include/Marmot/MarmotTensor.h" line="140" column="10" bodyfile="/home/runner/work/Marmot/Marmot/modules/core/MarmotMathCore/include/Marmot/MarmotTensor.h" bodystart="140" bodyend="143"/>
      </memberdef>
      <memberdef kind="function" id="_marmot_tensor_8h_1ad4d5c816b765ba019bdb1d1118e2f1ea" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Derived</type>
          </param>
          <param>
            <type>typename</type>
            <defval>std::enable_if&lt; !std::is_const&lt; std::remove_reference&lt; Derived &gt; &gt;::value &gt;</defval>
          </param>
        </templateparamlist>
        <type>auto</type>
        <definition>auto Marmot::ContinuumMechanics::TensorUtility::flatten</definition>
        <argsstring>(Derived &amp;t)</argsstring>
        <name>flatten</name>
        <qualifiedname>Marmot::ContinuumMechanics::TensorUtility::flatten</qualifiedname>
        <param>
          <type>Derived &amp;</type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/Marmot/Marmot/modules/core/MarmotMathCore/include/Marmot/MarmotTensor.h" line="147" column="10" bodyfile="/home/runner/work/Marmot/Marmot/modules/core/MarmotMathCore/include/Marmot/MarmotTensor.h" bodystart="147" bodyend="152"/>
      </memberdef>
      <memberdef kind="function" id="_marmot_tensor_8h_1a95e1750e4b9a0f970117a71a7beee21f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Derived</type>
          </param>
          <param>
            <type>typename</type>
            <defval>void</defval>
          </param>
        </templateparamlist>
        <type>auto</type>
        <definition>auto Marmot::ContinuumMechanics::TensorUtility::flatten</definition>
        <argsstring>(const Derived &amp;t)</argsstring>
        <name>flatten</name>
        <qualifiedname>Marmot::ContinuumMechanics::TensorUtility::flatten</qualifiedname>
        <param>
          <type>const Derived &amp;</type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/Marmot/Marmot/modules/core/MarmotMathCore/include/Marmot/MarmotTensor.h" line="155" column="10" bodyfile="/home/runner/work/Marmot/Marmot/modules/core/MarmotMathCore/include/Marmot/MarmotTensor.h" bodystart="155" bodyend="160"/>
      </memberdef>
      <memberdef kind="function" id="_marmot_tensor_8h_1a55c5c241f3e174b5518f25e0310f6f1b" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>int...</type>
            <declname>Pairs</declname>
            <defname>Pairs</defname>
          </param>
        </templateparamlist>
        <type>auto</type>
        <definition>auto Marmot::ContinuumMechanics::TensorUtility::contractionDims</definition>
        <argsstring>()</argsstring>
        <name>contractionDims</name>
        <qualifiedname>Marmot::ContinuumMechanics::TensorUtility::contractionDims</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/Marmot/Marmot/modules/core/MarmotMathCore/include/Marmot/MarmotTensor.h" line="163" column="20" bodyfile="/home/runner/work/Marmot/Marmot/modules/core/MarmotMathCore/include/Marmot/MarmotTensor.h" bodystart="163" bodyend="180"/>
      </memberdef>
      <memberdef kind="function" id="_marmot_tensor_8h_1a5cf70bc025ba0714a52d5bd0935a6230" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Eigen::Matrix3d</type>
        <definition>Eigen::Matrix3d Marmot::ContinuumMechanics::TensorUtility::dyadicProduct</definition>
        <argsstring>(const Eigen::Vector3d &amp;vector1, const Eigen::Vector3d &amp;vector2)</argsstring>
        <name>dyadicProduct</name>
        <qualifiedname>Marmot::ContinuumMechanics::TensorUtility::dyadicProduct</qualifiedname>
        <param>
          <type>const Eigen::Vector3d &amp;</type>
          <declname>vector1</declname>
        </param>
        <param>
          <type>const Eigen::Vector3d &amp;</type>
          <declname>vector2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/Marmot/Marmot/modules/core/MarmotMathCore/include/Marmot/MarmotTensor.h" line="182" column="21" declfile="/home/runner/work/Marmot/Marmot/modules/core/MarmotMathCore/include/Marmot/MarmotTensor.h" declline="182" declcolumn="21"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/runner/work/Marmot/Marmot/modules/core/MarmotMathCore/include/Marmot/MarmotTensor.h" line="123" column="3"/>
  </compounddef>
</doxygen>

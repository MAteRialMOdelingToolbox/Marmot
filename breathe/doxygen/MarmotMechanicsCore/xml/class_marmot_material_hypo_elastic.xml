<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_marmot_material_hypo_elastic" kind="class" language="C++" prot="public" abstract="yes">
    <compoundname>MarmotMaterialHypoElastic</compoundname>
    <basecompoundref refid="class_marmot_material_mechanical" prot="public" virt="non-virtual">MarmotMaterialMechanical</basecompoundref>
    <derivedcompoundref refid="class_marmot_material_hypo_elastic_a_d" prot="public" virt="non-virtual">MarmotMaterialHypoElasticAD</derivedcompoundref>
    <includes refid="_marmot_material_hypo_elastic_8h" local="no">MarmotMaterialHypoElastic.h</includes>
    <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="class_marmot_material_hypo_elastic_1af526ea494a3ba4d70de3be5d2d55b5a0" prot="public" static="no" mutable="no">
        <type>double</type>
        <definition>double MarmotMaterialHypoElastic::characteristicElementLength</definition>
        <argsstring></argsstring>
        <name>characteristicElementLength</name>
        <qualifiedname>MarmotMaterialHypoElastic::characteristicElementLength</qualifiedname>
        <briefdescription>
<para>Characteristic element length. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/Marmot/Marmot/modules/core/MarmotMechanicsCore/include/Marmot/MarmotMaterialHypoElastic.h" line="60" column="10" bodyfile="/home/runner/work/Marmot/Marmot/modules/core/MarmotMechanicsCore/include/Marmot/MarmotMaterialHypoElastic.h" bodystart="60" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_marmot_material_hypo_elastic_1aee2d34ac568027969f668999154b4b20" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void MarmotMaterialHypoElastic::setCharacteristicElementLength</definition>
        <argsstring>(double length)</argsstring>
        <name>setCharacteristicElementLength</name>
        <qualifiedname>MarmotMaterialHypoElastic::setCharacteristicElementLength</qualifiedname>
        <param>
          <type>double</type>
          <declname>length</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set the characteristic element length at the considered quadrature point. It is needed for the regularization of materials with softening behavior based on the mesh-adjusted softening modulus.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">length</parametername>
</parameternamelist>
<parameterdescription>
<para>characteristic length; will be assigned to <ref refid="class_marmot_material_hypo_elastic_1af526ea494a3ba4d70de3be5d2d55b5a0" kindref="member">characteristicElementLength</ref> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/Marmot/Marmot/modules/core/MarmotMechanicsCore/include/Marmot/MarmotMaterialHypoElastic.h" line="68" column="8"/>
      </memberdef>
      <memberdef kind="function" id="class_marmot_material_hypo_elastic_1a5c718df3ee25eb2462b707d3e06c9621" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void MarmotMaterialHypoElastic::computeStress</definition>
        <argsstring>(double *stress, double *dStressDDStrain, const double *FOld, const double *FNew, const double *timeOld, const double dT, double &amp;pNewDT) override</argsstring>
        <name>computeStress</name>
        <qualifiedname>MarmotMaterialHypoElastic::computeStress</qualifiedname>
        <reimplements refid="class_marmot_material_mechanical_1ad41c3e35947773970340d5a315b3e52a">computeStress</reimplements>
        <param>
          <type>double *</type>
          <declname>stress</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>dStressDDStrain</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>FOld</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>FNew</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>timeOld</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>dT</declname>
        </param>
        <param>
          <type>double &amp;</type>
          <declname>pNewDT</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>For a given deformation gradient at the old and the current time, compute the Cauchy stress and the algorithmic tangent <formula id="9">$\frac{\partial\boldsymbol{\sigma}^{(n+1)}}{\partial\boldsymbol{F}^{(n+1)}}$</formula>.</para>
<para><xrefsect id="todo_1_todo000003"><xreftitle>Todo</xreftitle><xrefdescription><para>A default implementation is provided.</para>
</xrefdescription></xrefsect></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">stress</parametername>
</parameternamelist>
<parameterdescription>
<para>Cauchy stress </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="inout">dSdE</parametername>
</parameternamelist>
<parameterdescription>
<para>Algorithmic tangent representing the derivative of the Cauchy stress tensor with respect to the deformation gradient <formula id="10">$\boldsymbol{F}$</formula> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">FOld</parametername>
</parameternamelist>
<parameterdescription>
<para>Deformation gradient at the old (pseudo-)time </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">FNew</parametername>
</parameternamelist>
<parameterdescription>
<para>Deformation gradient at the current (pseudo-)time </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">timeOld</parametername>
</parameternamelist>
<parameterdescription>
<para>Old (pseudo-)time </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">dt</parametername>
</parameternamelist>
<parameterdescription>
<para>(Pseudo-)time increment from the old (pseudo-)time to the current (pseudo-)time </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="inout">pNewDT</parametername>
</parameternamelist>
<parameterdescription>
<para>Suggestion for a new time increment </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/Marmot/Marmot/modules/core/MarmotMechanicsCore/include/Marmot/MarmotMaterialHypoElastic.h" line="85" column="16"/>
      </memberdef>
      <memberdef kind="function" id="class_marmot_material_hypo_elastic_1a4751feeb33fc3205fc5c2b75fdc0d30c" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void MarmotMaterialHypoElastic::computeStress</definition>
        <argsstring>(double *stress, double *dStressDDStrain, const double *dStrain, const double *timeOld, const double dT, double &amp;pNewDT)=0</argsstring>
        <name>computeStress</name>
        <qualifiedname>MarmotMaterialHypoElastic::computeStress</qualifiedname>
        <reimplementedby refid="class_marmot_material_hypo_elastic_a_d_1a8bab35fe61d2cb2a0b157832aa040e12">computeStress</reimplementedby>
        <param>
          <type>double *</type>
          <declname>stress</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>dStressDDStrain</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>dStrain</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>timeOld</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>dT</declname>
        </param>
        <param>
          <type>double &amp;</type>
          <declname>pNewDT</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>For a given linearized strain increment <formula id="11">$\Delta\boldsymbol{\varepsilon}$</formula> at the old and the current time, compute the Cauchy stress and the algorithmic tangent <formula id="12">$\frac{\partial\boldsymbol{\sigma}^{(n+1)}}{\partial\boldsymbol{\varepsilon}^{(n+1)}}$</formula>.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">stress</parametername>
</parameternamelist>
<parameterdescription>
<para>Cauchy stress </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="inout">dStressDDstrain</parametername>
</parameternamelist>
<parameterdescription>
<para>Algorithmic tangent representing the derivative of the Cauchy stress tensor with respect to the linearized strain </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">dStrain</parametername>
</parameternamelist>
<parameterdescription>
<para>linearized strain increment </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">timeOld</parametername>
</parameternamelist>
<parameterdescription>
<para>Old (pseudo-)time </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">dt</parametername>
</parameternamelist>
<parameterdescription>
<para>(Pseudo-)time increment from the old (pseudo-)time to the current (pseudo-)time </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="inout">pNewDT</parametername>
</parameternamelist>
<parameterdescription>
<para>Suggestion for a new time increment </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/Marmot/Marmot/modules/core/MarmotMechanicsCore/include/Marmot/MarmotMaterialHypoElastic.h" line="106" column="16"/>
      </memberdef>
      <memberdef kind="function" id="class_marmot_material_hypo_elastic_1a2c703a3ac8f0b1211402c28712ad9609" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void MarmotMaterialHypoElastic::computePlaneStress</definition>
        <argsstring>(double *stress2D, double *dStress_dStrain2D, const double *dStrain2D, const double *timeOld, const double dT, double &amp;pNewDT)</argsstring>
        <name>computePlaneStress</name>
        <qualifiedname>MarmotMaterialHypoElastic::computePlaneStress</qualifiedname>
        <param>
          <type>double *</type>
          <declname>stress2D</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>dStress_dStrain2D</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>dStrain2D</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>timeOld</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>dT</declname>
        </param>
        <param>
          <type>double &amp;</type>
          <declname>pNewDT</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/Marmot/Marmot/modules/core/MarmotMechanicsCore/include/Marmot/MarmotMaterialHypoElastic.h" line="117" column="16"/>
      </memberdef>
      <memberdef kind="function" id="class_marmot_material_hypo_elastic_1aed09321cbadf6521263ddf4001288c5a" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void MarmotMaterialHypoElastic::computeUniaxialStress</definition>
        <argsstring>(double *stress1D, double *dStress_dStrain1D, const double *dStrain, const double *timeOld, const double dT, double &amp;pNewDT)</argsstring>
        <name>computeUniaxialStress</name>
        <qualifiedname>MarmotMaterialHypoElastic::computeUniaxialStress</qualifiedname>
        <param>
          <type>double *</type>
          <declname>stress1D</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>dStress_dStrain1D</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>dStrain</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>timeOld</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>dT</declname>
        </param>
        <param>
          <type>double &amp;</type>
          <declname>pNewDT</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/Marmot/Marmot/modules/core/MarmotMechanicsCore/include/Marmot/MarmotMaterialHypoElastic.h" line="128" column="16"/>
      </memberdef>
      <memberdef kind="function" id="class_marmot_material_hypo_elastic_1adc72d0bff4f72a5eaed2baf11dc02f24" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void MarmotMaterialMechanical::computePlaneStress</definition>
        <argsstring>(double *stress2D, double *dStress_dF2DNew, const double *FOld2D, const double *FNew2D, const double *timeOld, const double dT, double &amp;pNewDT)</argsstring>
        <name>computePlaneStress</name>
        <qualifiedname>MarmotMaterialHypoElastic::computePlaneStress</qualifiedname>
        <reimplements refid="class_marmot_material_mechanical_1adc72d0bff4f72a5eaed2baf11dc02f24">computePlaneStress</reimplements>
        <param>
          <type>double *</type>
          <declname>stress2D</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>dStress_dF2DNew</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>FOld2D</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>FNew2D</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>timeOld</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>dT</declname>
        </param>
        <param>
          <type>double &amp;</type>
          <declname>pNewDT</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Plane stress implementation of <ref refid="class_marmot_material_hypo_elastic_1a5c718df3ee25eb2462b707d3e06c9621" kindref="member">computeStress</ref>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/Marmot/Marmot/modules/core/MarmotMechanicsCore/include/Marmot/MarmotMaterialHypoElastic.h" line="116" column="3"/>
      </memberdef>
      <memberdef kind="function" id="class_marmot_material_hypo_elastic_1a914feb016e64919cee4f1d7ab5029cd8" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void MarmotMaterialMechanical::computeUniaxialStress</definition>
        <argsstring>(double *stress1D, double *dStress1D_dF1DNew, const double *F1DOld, const double *F1DNew, const double *timeOld, const double dT, double &amp;pNewDT)</argsstring>
        <name>computeUniaxialStress</name>
        <qualifiedname>MarmotMaterialHypoElastic::computeUniaxialStress</qualifiedname>
        <reimplements refid="class_marmot_material_mechanical_1a914feb016e64919cee4f1d7ab5029cd8">computeUniaxialStress</reimplements>
        <param>
          <type>double *</type>
          <declname>stress1D</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>dStress1D_dF1DNew</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>F1DOld</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>F1DNew</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>timeOld</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>dT</declname>
        </param>
        <param>
          <type>double &amp;</type>
          <declname>pNewDT</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Uniaxial stress implementation of <ref refid="class_marmot_material_hypo_elastic_1a5c718df3ee25eb2462b707d3e06c9621" kindref="member">computeStress</ref>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/Marmot/Marmot/modules/core/MarmotMechanicsCore/include/Marmot/MarmotMaterialHypoElastic.h" line="127" column="3"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Derived abstract base class for elastic materials expressed purely in rate form.</para>
<para>In general, the nominal stress rate tensor <formula id="1">$ \sigRate $</formula> can be written as a function of the nominal stress tensor <formula id="2">$ \sig $</formula>, the stretching rate tensor <formula id="3">$ \epsRate $</formula> and the time <formula id="4">$ t $</formula>.</para>
<para><formula id="5">\[  \displaystyle \sigRate = f( \sig, \epsRate, t, ...) \]</formula></para>
<para>In course of numerical time integration, this relation will be formulated incrementally as</para>
<para><formula id="6">\[  \displaystyle \Delta \sig = f ( \sig_n, \Delta\eps, \Delta t, t_n, ...) \]</formula></para>
<para>with</para>
<para><formula id="7">\[  \displaystyle \Delta\eps =  \epsRate\, \Delta t \]</formula></para>
<para>and the algorithmic tangent</para>
<para><formula id="8">\[ \displaystyle \frac{d \sig }{d \eps } =  \frac{d \Delta \sig }{d \Delta \eps } \]</formula></para>
<para>This formulation is compatible with an Abaqus interface. </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="3">
        <label>MarmotMaterial</label>
      </node>
      <node id="1">
        <label>MarmotMaterialHypoElastic</label>
        <link refid="class_marmot_material_hypo_elastic"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>MarmotMaterialHypoElasticAD</label>
        <link refid="class_marmot_material_hypo_elastic_a_d"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>MarmotMaterialMechanical</label>
        <link refid="class_marmot_material_mechanical"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="3">
        <label>MarmotMaterial</label>
      </node>
      <node id="1">
        <label>MarmotMaterialHypoElastic</label>
        <link refid="class_marmot_material_hypo_elastic"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>MarmotMaterialMechanical</label>
        <link refid="class_marmot_material_mechanical"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/runner/work/Marmot/Marmot/modules/core/MarmotMechanicsCore/include/Marmot/MarmotMaterialHypoElastic.h" line="54" column="1" bodyfile="/home/runner/work/Marmot/Marmot/modules/core/MarmotMechanicsCore/include/Marmot/MarmotMaterialHypoElastic.h" bodystart="54" bodyend="134"/>
    <listofallmembers>
      <member refid="class_marmot_material_hypo_elastic_1af526ea494a3ba4d70de3be5d2d55b5a0" prot="public" virt="non-virtual"><scope>MarmotMaterialHypoElastic</scope><name>characteristicElementLength</name></member>
      <member refid="class_marmot_material_hypo_elastic_1a2c703a3ac8f0b1211402c28712ad9609" prot="public" virt="virtual"><scope>MarmotMaterialHypoElastic</scope><name>computePlaneStress</name></member>
      <member refid="class_marmot_material_hypo_elastic_1adc72d0bff4f72a5eaed2baf11dc02f24" prot="public" virt="virtual"><scope>MarmotMaterialHypoElastic</scope><name>computePlaneStress</name></member>
      <member refid="class_marmot_material_hypo_elastic_1a5c718df3ee25eb2462b707d3e06c9621" prot="public" virt="virtual"><scope>MarmotMaterialHypoElastic</scope><name>computeStress</name></member>
      <member refid="class_marmot_material_hypo_elastic_1a4751feeb33fc3205fc5c2b75fdc0d30c" prot="public" virt="pure-virtual"><scope>MarmotMaterialHypoElastic</scope><name>computeStress</name></member>
      <member refid="class_marmot_material_hypo_elastic_1aed09321cbadf6521263ddf4001288c5a" prot="public" virt="virtual"><scope>MarmotMaterialHypoElastic</scope><name>computeUniaxialStress</name></member>
      <member refid="class_marmot_material_hypo_elastic_1a914feb016e64919cee4f1d7ab5029cd8" prot="public" virt="virtual"><scope>MarmotMaterialHypoElastic</scope><name>computeUniaxialStress</name></member>
      <member refid="class_marmot_material_hypo_elastic_1aee2d34ac568027969f668999154b4b20" prot="public" virt="non-virtual"><scope>MarmotMaterialHypoElastic</scope><name>setCharacteristicElementLength</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="namespace_marmot_1_1_continuum_mechanics_1_1_elasticity_1_1_isotropic" kind="namespace" language="C++">
    <compoundname>Marmot::ContinuumMechanics::Elasticity::Isotropic</compoundname>
    <sectiondef kind="func">
      <memberdef kind="function" id="namespace_marmot_1_1_continuum_mechanics_1_1_elasticity_1_1_isotropic_1a207668a6ab28d4375b6a96ce4557d1b6" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double constexpr</type>
        <definition>double constexpr Marmot::ContinuumMechanics::Elasticity::Isotropic::E</definition>
        <argsstring>(const double K, const double G)</argsstring>
        <name>E</name>
        <qualifiedname>Marmot::ContinuumMechanics::Elasticity::Isotropic::E</qualifiedname>
        <param>
          <type>const double</type>
          <declname>K</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>G</declname>
        </param>
        <briefdescription>
<para>Computes the isotropic Young&apos;s modulus <formula id="84">$ E $</formula> from the compression modulus <formula id="85">$ K $</formula> and shear modulus <formula id="86">$ G $</formula>. </para>
        </briefdescription>
        <detaileddescription>
<para><formula id="87">\[  \displaystyle E = \frac{9\,K\,G}{3\,K + G}
\]</formula></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>K</parametername>
</parameternamelist>
<parameterdescription>
<para>Compression modulus <formula id="85">$ K $</formula>. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>G</parametername>
</parameternamelist>
<parameterdescription>
<para>Shear modulus <formula id="86">$ G $</formula>. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Young&apos;s modulus <formula id="84">$ E $</formula>. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/Marmot/Marmot/modules/core/MarmotMechanicsCore/include/Marmot/MarmotElasticity.h" line="54" column="24" bodyfile="/home/runner/work/Marmot/Marmot/modules/core/MarmotMechanicsCore/include/Marmot/MarmotElasticity.h" bodystart="54" bodyend="57"/>
      </memberdef>
      <memberdef kind="function" id="namespace_marmot_1_1_continuum_mechanics_1_1_elasticity_1_1_isotropic_1a9816087f223afacacbc1361ae03ef2a2" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double constexpr</type>
        <definition>double constexpr Marmot::ContinuumMechanics::Elasticity::Isotropic::nu</definition>
        <argsstring>(const double K, const double G)</argsstring>
        <name>nu</name>
        <qualifiedname>Marmot::ContinuumMechanics::Elasticity::Isotropic::nu</qualifiedname>
        <param>
          <type>const double</type>
          <declname>K</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>G</declname>
        </param>
        <briefdescription>
<para>Computes the isotropic Poisson&apos;s ratio <formula id="88">$ \nu $</formula> from the compression modulus <formula id="85">$ K $</formula> and shear modulus <formula id="86">$ G $</formula>. </para>
        </briefdescription>
        <detaileddescription>
<para><formula id="89">\[  \displaystyle \nu = \frac{3\,K - 2\,G}{6\,K + 2\,G}
\]</formula></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>K</parametername>
</parameternamelist>
<parameterdescription>
<para>Compression modulus <formula id="85">$ K $</formula>. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>G</parametername>
</parameternamelist>
<parameterdescription>
<para>Shear modulus <formula id="86">$ G $</formula>. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Poisson&apos;s ratio <formula id="88">$ \nu $</formula>. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/Marmot/Marmot/modules/core/MarmotMechanicsCore/include/Marmot/MarmotElasticity.h" line="71" column="24" bodyfile="/home/runner/work/Marmot/Marmot/modules/core/MarmotMechanicsCore/include/Marmot/MarmotElasticity.h" bodystart="71" bodyend="74"/>
      </memberdef>
      <memberdef kind="function" id="namespace_marmot_1_1_continuum_mechanics_1_1_elasticity_1_1_isotropic_1abd5af63b27f26503e1d51d4473706f3a" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double constexpr</type>
        <definition>double constexpr Marmot::ContinuumMechanics::Elasticity::Isotropic::shearModulus</definition>
        <argsstring>(const double E, const double nu)</argsstring>
        <name>shearModulus</name>
        <qualifiedname>Marmot::ContinuumMechanics::Elasticity::Isotropic::shearModulus</qualifiedname>
        <param>
          <type>const double</type>
          <declname>E</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>nu</declname>
        </param>
        <briefdescription>
<para>Computes the isotropic shear modulus <formula id="86">$ G $</formula> from the Young&apos;s modulus <formula id="84">$ E $</formula> and Poisson&apos;s ratio <formula id="88">$ \nu $</formula>. </para>
        </briefdescription>
        <detaileddescription>
<para><formula id="90">\[ \displaystyle G = \frac{E}{2\,(1 + \nu)}
\]</formula> <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>E</parametername>
</parameternamelist>
<parameterdescription>
<para>Young&apos;s modulus <formula id="84">$ E $</formula>. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>nu</parametername>
</parameternamelist>
<parameterdescription>
<para>Poisson&apos;s ratio <formula id="88">$ \nu $</formula>. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Shear modulus <formula id="86">$ G $</formula>. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/Marmot/Marmot/modules/core/MarmotMechanicsCore/include/Marmot/MarmotElasticity.h" line="87" column="24" bodyfile="/home/runner/work/Marmot/Marmot/modules/core/MarmotMechanicsCore/include/Marmot/MarmotElasticity.h" bodystart="87" bodyend="90"/>
      </memberdef>
      <memberdef kind="function" id="namespace_marmot_1_1_continuum_mechanics_1_1_elasticity_1_1_isotropic_1ac85dd648af70cdb91341fcc986402963" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double constexpr</type>
        <definition>double constexpr Marmot::ContinuumMechanics::Elasticity::Isotropic::lameParameter</definition>
        <argsstring>(const double E, const double nu)</argsstring>
        <name>lameParameter</name>
        <qualifiedname>Marmot::ContinuumMechanics::Elasticity::Isotropic::lameParameter</qualifiedname>
        <param>
          <type>const double</type>
          <declname>E</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>nu</declname>
        </param>
        <briefdescription>
<para>Computes the isotropic Lamé parameter <formula id="91">$ \lambda $</formula> from the Young&apos;s modulus <formula id="84">$ E $</formula> and Poisson&apos;s ratio <formula id="88">$ \nu $</formula>. </para>
        </briefdescription>
        <detaileddescription>
<para><formula id="92">\[ \displaystyle \lambda = \frac{E\,\nu}{(1 + \nu)(1 - 2\,\nu)}
\]</formula></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>E</parametername>
</parameternamelist>
<parameterdescription>
<para>Young&apos;s modulus <formula id="84">$ E $</formula>. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>nu</parametername>
</parameternamelist>
<parameterdescription>
<para>Poisson&apos;s ratio <formula id="88">$ \nu $</formula>. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Lamé parameter <formula id="91">$ \lambda $</formula>. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/Marmot/Marmot/modules/core/MarmotMechanicsCore/include/Marmot/MarmotElasticity.h" line="104" column="24" bodyfile="/home/runner/work/Marmot/Marmot/modules/core/MarmotMechanicsCore/include/Marmot/MarmotElasticity.h" bodystart="104" bodyend="107"/>
      </memberdef>
      <memberdef kind="function" id="namespace_marmot_1_1_continuum_mechanics_1_1_elasticity_1_1_isotropic_1a90fdc11919333788a03f41babbf21afe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Matrix6d</type>
        <definition>Matrix6d Marmot::ContinuumMechanics::Elasticity::Isotropic::complianceTensor</definition>
        <argsstring>(const double E, const double nu)</argsstring>
        <name>complianceTensor</name>
        <qualifiedname>Marmot::ContinuumMechanics::Elasticity::Isotropic::complianceTensor</qualifiedname>
        <param>
          <type>const double</type>
          <declname>E</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>nu</declname>
        </param>
        <briefdescription>
<para>Computes the isotropic compliance tensor <formula id="93">$\mathbb{C}^{-1}$</formula>. </para>
        </briefdescription>
        <detaileddescription>
<para><formula id="94">\[ \displaystyle \mathbb{ C }^{-1} = \begin{bmatrix}
                \frac{1}{E} &amp; \frac{-\nu}{E} &amp; \frac{-\nu}{E} &amp; 0 &amp; 0 &amp; 0 \\
                \frac{-\nu}{E} &amp; \frac{1}{E} &amp; \frac{-\nu}{E} &amp; 0 &amp; 0 &amp; 0 \\
                \frac{-\nu}{E} &amp; \frac{-\nu}{E} &amp; \frac{1}{E} &amp; 0 &amp; 0 &amp; 0 \\
          0 &amp; 0 &amp; 0 &amp; \frac{1}{G} &amp; 0 &amp; 0 \\
          0 &amp; 0 &amp; 0 &amp; 0 &amp; \frac{1}{G} &amp; 0 \\
          0 &amp; 0 &amp; 0 &amp; 0 &amp; 0 &amp; \frac{1}{G}
           \end{bmatrix}
\]</formula></para>
<para>with</para>
<para><formula id="95">\[   G = \frac{E}{2\,(1 + \nu)}.
\]</formula></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>E</parametername>
</parameternamelist>
<parameterdescription>
<para>Young&apos;s modulus <formula id="96">$E$</formula>. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>nu</parametername>
</parameternamelist>
<parameterdescription>
<para>Poisson&apos;s ratio <formula id="97">$\nu$</formula>. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Compliance tensor <formula id="93">$\mathbb{C}^{-1}$</formula> as a 6x6 matrix. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/Marmot/Marmot/modules/core/MarmotMechanicsCore/include/Marmot/MarmotElasticity.h" line="132" column="16" declfile="/home/runner/work/Marmot/Marmot/modules/core/MarmotMechanicsCore/include/Marmot/MarmotElasticity.h" declline="132" declcolumn="16"/>
      </memberdef>
      <memberdef kind="function" id="namespace_marmot_1_1_continuum_mechanics_1_1_elasticity_1_1_isotropic_1a8c6fc02e9c8552d1be0bf5135e5cab1f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Matrix6d</type>
        <definition>Matrix6d Marmot::ContinuumMechanics::Elasticity::Isotropic::stiffnessTensor</definition>
        <argsstring>(const double E, const double nu)</argsstring>
        <name>stiffnessTensor</name>
        <qualifiedname>Marmot::ContinuumMechanics::Elasticity::Isotropic::stiffnessTensor</qualifiedname>
        <param>
          <type>const double</type>
          <declname>E</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>nu</declname>
        </param>
        <briefdescription>
<para>Computes the isotropic stiffness tensor <formula id="35">$\mathbb{C}$</formula> from Young&apos;s modulus <formula id="96">$E$</formula> and Poisson&apos;s ratio <formula id="97">$\nu$</formula>. </para>
        </briefdescription>
        <detaileddescription>
<para><formula id="98">\[\displaystyle \mathbb{ C } = \frac{E\,(1-\nu)}{(1+\nu)(1-2\,\nu)} \begin{bmatrix}
                                1 &amp; \frac{\nu}{1-\nu} &amp; \frac{\nu}{1-\nu} &amp; 0 &amp; 0 &amp; 0 \\
                                            \frac{\nu}{1-\nu} &amp; 1 &amp; \frac{\nu}{1-\nu} &amp; 0 &amp; 0 &amp; 0 \\
                                      \frac{\nu}{1-\nu} &amp; \frac{\nu}{1-\nu} &amp; 1 &amp; 0 &amp; 0 &amp; 0 \\
                                  0 &amp; 0 &amp; 0 &amp; \frac{1-2\,\nu}{2\,(1-\nu)} &amp; 0 &amp; 0 \\
                                      0 &amp; 0 &amp; 0 &amp; 0 &amp; \frac{1-2\,\nu}{2\,(1-\nu)} &amp; 0 \\
                                      0 &amp; 0 &amp; 0 &amp; 0 &amp; 0 &amp; \frac{1-2\,\nu}{2\,(1-\nu)}
                                 \end{bmatrix}
\]</formula></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>E</parametername>
</parameternamelist>
<parameterdescription>
<para>Young&apos;s modulus <formula id="96">$E$</formula>. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>nu</parametername>
</parameternamelist>
<parameterdescription>
<para>Poisson&apos;s ratio <formula id="97">$\nu$</formula>. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Stiffness tensor <formula id="35">$\mathbb{C}$</formula> as a 6x6 matrix. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/Marmot/Marmot/modules/core/MarmotMechanicsCore/include/Marmot/MarmotElasticity.h" line="153" column="16" declfile="/home/runner/work/Marmot/Marmot/modules/core/MarmotMechanicsCore/include/Marmot/MarmotElasticity.h" declline="153" declcolumn="16"/>
      </memberdef>
      <memberdef kind="function" id="namespace_marmot_1_1_continuum_mechanics_1_1_elasticity_1_1_isotropic_1a77f29e67538be4839905b21b9678ab01" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Matrix6d</type>
        <definition>Matrix6d Marmot::ContinuumMechanics::Elasticity::Isotropic::stiffnessTensorKG</definition>
        <argsstring>(const double K, const double G)</argsstring>
        <name>stiffnessTensorKG</name>
        <qualifiedname>Marmot::ContinuumMechanics::Elasticity::Isotropic::stiffnessTensorKG</qualifiedname>
        <param>
          <type>const double</type>
          <declname>K</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>G</declname>
        </param>
        <briefdescription>
<para>Computes the isotropic stiffness tensor <formula id="35">$\mathbb{C}$</formula> from the bulk modulus <formula id="99">$K$</formula> and shear modulus <formula id="100">$G$</formula>. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>K</parametername>
</parameternamelist>
<parameterdescription>
<para>Bulk modulus <formula id="99">$K$</formula>. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>G</parametername>
</parameternamelist>
<parameterdescription>
<para>Shear modulus <formula id="100">$G$</formula>. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Stiffness tensor <formula id="35">$\mathbb{C}$</formula> as a 6x6 matrix. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/Marmot/Marmot/modules/core/MarmotMechanicsCore/include/Marmot/MarmotElasticity.h" line="163" column="16" declfile="/home/runner/work/Marmot/Marmot/modules/core/MarmotMechanicsCore/include/Marmot/MarmotElasticity.h" declline="163" declcolumn="16"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>Functions for the description of isotropic elastic behavior. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/runner/work/Marmot/Marmot/modules/core/MarmotMechanicsCore/include/Marmot/MarmotElasticity.h" line="40" column="5"/>
  </compounddef>
</doxygen>

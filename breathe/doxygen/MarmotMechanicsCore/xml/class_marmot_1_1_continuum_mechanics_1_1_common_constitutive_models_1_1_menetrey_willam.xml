<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_marmot_1_1_continuum_mechanics_1_1_common_constitutive_models_1_1_menetrey_willam" kind="class" language="C++" prot="public">
    <compoundname>Marmot::ContinuumMechanics::CommonConstitutiveModels::MenetreyWillam</compoundname>
    <includes refid="_menetrey_willam_8h" local="no">MenetreyWillam.h</includes>
    <innerclass refid="struct_marmot_1_1_continuum_mechanics_1_1_common_constitutive_models_1_1_menetrey_willam_1_1_menetrey_willam_parameters" prot="public">Marmot::ContinuumMechanics::CommonConstitutiveModels::MenetreyWillam::MenetreyWillamParameters</innerclass>
    <sectiondef kind="public-type">
      <memberdef kind="enum" id="class_marmot_1_1_continuum_mechanics_1_1_common_constitutive_models_1_1_menetrey_willam_1aee31f28f31786081f5eed39684e0d13e" prot="public" static="no" strong="yes">
        <type></type>
        <name>MenetreyWillamType</name>
        <qualifiedname>Marmot::ContinuumMechanics::CommonConstitutiveModels::MenetreyWillam::MenetreyWillamType</qualifiedname>
        <enumvalue id="class_marmot_1_1_continuum_mechanics_1_1_common_constitutive_models_1_1_menetrey_willam_1aee31f28f31786081f5eed39684e0d13ea49cb105243e7fdf66099714c60355f90" prot="public">
          <name>Mises</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>von-Mises failure criterion; only the tensile strength <ref refid="class_marmot_1_1_continuum_mechanics_1_1_common_constitutive_models_1_1_menetrey_willam_1a5515f9b917927018cefd5515c8877dff" kindref="member">ft</ref> has to be specified. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_marmot_1_1_continuum_mechanics_1_1_common_constitutive_models_1_1_menetrey_willam_1aee31f28f31786081f5eed39684e0d13ea22ebae77a156b83cd52c31ffe36659e4" prot="public">
          <name>Rankine</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Rankine failure criterion; only the tensile strength <ref refid="class_marmot_1_1_continuum_mechanics_1_1_common_constitutive_models_1_1_menetrey_willam_1a5515f9b917927018cefd5515c8877dff" kindref="member">ft</ref> has to be specified. <simplesect kind="note"><para>In deviatoric sections, compared to the original Rankine criterion the vertices are slightly rounded (specified by the eccentricity parameter <formula id="23">$e$</formula>). </para>
</simplesect>
</para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_marmot_1_1_continuum_mechanics_1_1_common_constitutive_models_1_1_menetrey_willam_1aee31f28f31786081f5eed39684e0d13eab8e760502ad9eed0d63818e060313ad0" prot="public">
          <name>DruckerPrager</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Drucker-Prager failure criterion; both the tensile strength <ref refid="class_marmot_1_1_continuum_mechanics_1_1_common_constitutive_models_1_1_menetrey_willam_1a5515f9b917927018cefd5515c8877dff" kindref="member">ft</ref> as well as the compressive strength <ref refid="class_marmot_1_1_continuum_mechanics_1_1_common_constitutive_models_1_1_menetrey_willam_1ab2a1ca168ea4b5b2570220349548cfa1" kindref="member">fc</ref> have to be specified. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_marmot_1_1_continuum_mechanics_1_1_common_constitutive_models_1_1_menetrey_willam_1aee31f28f31786081f5eed39684e0d13eac61fd18636fa03149662bebe67f7e38f" prot="public">
          <name>MohrCoulomb</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Drucker-Prager failure criterion; both the tensile strength <ref refid="class_marmot_1_1_continuum_mechanics_1_1_common_constitutive_models_1_1_menetrey_willam_1a5515f9b917927018cefd5515c8877dff" kindref="member">ft</ref> as well as the compressive strength <ref refid="class_marmot_1_1_continuum_mechanics_1_1_common_constitutive_models_1_1_menetrey_willam_1ab2a1ca168ea4b5b2570220349548cfa1" kindref="member">fc</ref> have to be specified. <simplesect kind="note"><para>In deviatoric sections, compared to the original Mohr-Coulomb criterion the vertices are slightly rounded (specified by the eccentricity parameter <formula id="23">$e$</formula>). </para>
</simplesect>
</para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/Marmot/Marmot/modules/core/MarmotMechanicsCore/include/Marmot/MenetreyWillam.h" line="99" column="7" bodyfile="/home/runner/work/Marmot/Marmot/modules/core/MarmotMechanicsCore/include/Marmot/MenetreyWillam.h" bodystart="99" bodyend="112"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="class_marmot_1_1_continuum_mechanics_1_1_common_constitutive_models_1_1_menetrey_willam_1a2e382a19d9516b3569857a142b88151a" prot="public" static="no" mutable="no">
        <type>struct <ref refid="struct_marmot_1_1_continuum_mechanics_1_1_common_constitutive_models_1_1_menetrey_willam_1_1_menetrey_willam_parameters" kindref="compound">Marmot::ContinuumMechanics::CommonConstitutiveModels::MenetreyWillam::MenetreyWillamParameters</ref></type>
        <definition>struct Marmot::ContinuumMechanics::CommonConstitutiveModels::MenetreyWillam::MenetreyWillamParameters Marmot::ContinuumMechanics::CommonConstitutiveModels::MenetreyWillam::param</definition>
        <argsstring></argsstring>
        <name>param</name>
        <qualifiedname>Marmot::ContinuumMechanics::CommonConstitutiveModels::MenetreyWillam::param</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/Marmot/Marmot/modules/core/MarmotMechanicsCore/include/Marmot/MenetreyWillam.h" line="96" column="13"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_marmot_1_1_continuum_mechanics_1_1_common_constitutive_models_1_1_menetrey_willam_1a8ee143cb61db234593e2eeec70748bf7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Marmot::ContinuumMechanics::CommonConstitutiveModels::MenetreyWillam::MenetreyWillam</definition>
        <argsstring>(const double ft, const MenetreyWillamType &amp;type=MenetreyWillamType::Rankine, const double fc=0)</argsstring>
        <name>MenetreyWillam</name>
        <qualifiedname>Marmot::ContinuumMechanics::CommonConstitutiveModels::MenetreyWillam::MenetreyWillam</qualifiedname>
        <param>
          <type>const double</type>
          <declname>ft</declname>
        </param>
        <param>
          <type>const <ref refid="class_marmot_1_1_continuum_mechanics_1_1_common_constitutive_models_1_1_menetrey_willam_1aee31f28f31786081f5eed39684e0d13e" kindref="member">MenetreyWillamType</ref> &amp;</type>
          <declname>type</declname>
          <defval><ref refid="class_marmot_1_1_continuum_mechanics_1_1_common_constitutive_models_1_1_menetrey_willam_1aee31f28f31786081f5eed39684e0d13ea22ebae77a156b83cd52c31ffe36659e4" kindref="member">MenetreyWillamType::Rankine</ref></defval>
        </param>
        <param>
          <type>const double</type>
          <declname>fc</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Constructor that takes the uniaxial tensile strength <formula id="19">$f_t$</formula> and two optional arguments consisting of the specific type of failure criterion <ref refid="class_marmot_1_1_continuum_mechanics_1_1_common_constitutive_models_1_1_menetrey_willam_1aee31f28f31786081f5eed39684e0d13e" kindref="member">MenetreyWillamType</ref> and the uniaxial compressive strength <formula id="20">$f_c$</formula>. The call of the constructor automatically fills the corresponding Menetrey-Willam param. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/Marmot/Marmot/modules/core/MarmotMechanicsCore/include/Marmot/MenetreyWillam.h" line="120" column="7"/>
      </memberdef>
      <memberdef kind="function" id="class_marmot_1_1_continuum_mechanics_1_1_common_constitutive_models_1_1_menetrey_willam_1a995459659e174b5cedc31adc02a0f708" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Marmot::ContinuumMechanics::CommonConstitutiveModels::MenetreyWillam::setParameters</definition>
        <argsstring>(const double ft, const double fc, const MenetreyWillamType &amp;type)</argsstring>
        <name>setParameters</name>
        <qualifiedname>Marmot::ContinuumMechanics::CommonConstitutiveModels::MenetreyWillam::setParameters</qualifiedname>
        <param>
          <type>const double</type>
          <declname>ft</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>fc</declname>
        </param>
        <param>
          <type>const <ref refid="class_marmot_1_1_continuum_mechanics_1_1_common_constitutive_models_1_1_menetrey_willam_1aee31f28f31786081f5eed39684e0d13e" kindref="member">MenetreyWillamType</ref> &amp;</type>
          <declname>type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This function can be used to reset the type of the specified failure criterion by entering the uniaxial compressive strength <ref refid="class_marmot_1_1_continuum_mechanics_1_1_common_constitutive_models_1_1_menetrey_willam_1ab2a1ca168ea4b5b2570220349548cfa1" kindref="member">fc</ref>, the uniaxial tensile strength <ref refid="class_marmot_1_1_continuum_mechanics_1_1_common_constitutive_models_1_1_menetrey_willam_1a5515f9b917927018cefd5515c8877dff" kindref="member">ft</ref> and the <ref refid="class_marmot_1_1_continuum_mechanics_1_1_common_constitutive_models_1_1_menetrey_willam_1aee31f28f31786081f5eed39684e0d13e" kindref="member">MenetreyWillamType</ref>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/Marmot/Marmot/modules/core/MarmotMechanicsCore/include/Marmot/MenetreyWillam.h" line="129" column="12"/>
      </memberdef>
      <memberdef kind="function" id="class_marmot_1_1_continuum_mechanics_1_1_common_constitutive_models_1_1_menetrey_willam_1a3ade49f99ffbbd015f920f20d4a62af2" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>T</type>
        <definition>T Marmot::ContinuumMechanics::CommonConstitutiveModels::MenetreyWillam::polarRadius</definition>
        <argsstring>(const double &amp;theta) const</argsstring>
        <name>polarRadius</name>
        <qualifiedname>Marmot::ContinuumMechanics::CommonConstitutiveModels::MenetreyWillam::polarRadius</qualifiedname>
        <param>
          <type>const double &amp;</type>
          <declname>theta</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Compute the polar radius <formula id="21">$r$</formula> from the Lode angle <formula id="22">$\theta$</formula>. The eccentricity parameter will be used from the chosen Menetrey-Willam parameters param. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/Marmot/Marmot/modules/core/MarmotMechanicsCore/include/Marmot/MenetreyWillam.h" line="136" column="9" bodyfile="/home/runner/work/Marmot/Marmot/modules/core/MarmotMechanicsCore/include/Marmot/MenetreyWillam.h" bodystart="136" bodyend="139"/>
      </memberdef>
      <memberdef kind="function" id="class_marmot_1_1_continuum_mechanics_1_1_common_constitutive_models_1_1_menetrey_willam_1a5d358b2889e8ad693043f1e7a8617bdb" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>std::pair&lt; T, T &gt;</type>
        <definition>std::pair&lt; T, T &gt; Marmot::ContinuumMechanics::CommonConstitutiveModels::MenetreyWillam::dPolarRadius_dTheta</definition>
        <argsstring>(const T &amp;theta) const</argsstring>
        <name>dPolarRadius_dTheta</name>
        <qualifiedname>Marmot::ContinuumMechanics::CommonConstitutiveModels::MenetreyWillam::dPolarRadius_dTheta</qualifiedname>
        <param>
          <type>const T &amp;</type>
          <declname>theta</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Compute the polar radius <formula id="21">$r$</formula> and its derivative <formula id="24">$\frac{dr}{d\theta}$</formula> from the Lode angle <formula id="22">$\theta$</formula>. The eccentricity parameter will be used from the param struct. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/Marmot/Marmot/modules/core/MarmotMechanicsCore/include/Marmot/MenetreyWillam.h" line="173" column="17" bodyfile="/home/runner/work/Marmot/Marmot/modules/core/MarmotMechanicsCore/include/Marmot/MenetreyWillam.h" bodystart="173" bodyend="176"/>
      </memberdef>
      <memberdef kind="function" id="class_marmot_1_1_continuum_mechanics_1_1_common_constitutive_models_1_1_menetrey_willam_1a901c05dc72df2e3e9ee027aeba4fbe80" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>T</type>
        <definition>T Marmot::ContinuumMechanics::CommonConstitutiveModels::MenetreyWillam::yieldFunction</definition>
        <argsstring>(const ContinuumMechanics::HaighWestergaard::HaighWestergaardCoordinates&lt; T &gt; &amp;hw, const double varEps=0.0) const</argsstring>
        <name>yieldFunction</name>
        <qualifiedname>Marmot::ContinuumMechanics::CommonConstitutiveModels::MenetreyWillam::yieldFunction</qualifiedname>
        <param>
          <type>const <ref refid="struct_marmot_1_1_continuum_mechanics_1_1_haigh_westergaard_1_1_haigh_westergaard_coordinates" kindref="compound">ContinuumMechanics::HaighWestergaard::HaighWestergaardCoordinates</ref>&lt; T &gt; &amp;</type>
          <declname>hw</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>varEps</declname>
          <defval>0.0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Evaluate the yield function <formula id="26">$f$</formula> depending on the Haigh-Westergaard stress coordinates hw. <formula id="27">$f&lt;0$</formula> means no yielding while <formula id="28">$f\geq0$</formula> means yielding. When the optional fillet parameter varEps is given, a potential vertex along the hydrostatic axis is rounded and thus a smooth failure criterion is obtained.</para>
<para><simplesect kind="note"><para>The yield function can be also used as plastic potential function if needed. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/Marmot/Marmot/modules/core/MarmotMechanicsCore/include/Marmot/MenetreyWillam.h" line="273" column="9" bodyfile="/home/runner/work/Marmot/Marmot/modules/core/MarmotMechanicsCore/include/Marmot/MenetreyWillam.h" bodystart="273" bodyend="285"/>
      </memberdef>
      <memberdef kind="function" id="class_marmot_1_1_continuum_mechanics_1_1_common_constitutive_models_1_1_menetrey_willam_1a1349a9d288bda6205d42fecacfee5fa0" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>std::tuple&lt; T, T, T &gt;</type>
        <definition>std::tuple&lt; T, T, T &gt; Marmot::ContinuumMechanics::CommonConstitutiveModels::MenetreyWillam::dYieldFunction_dHaighWestergaard</definition>
        <argsstring>(const ContinuumMechanics::HaighWestergaard::HaighWestergaardCoordinates&lt; T &gt; &amp;hw, const double varEps=0.0) const</argsstring>
        <name>dYieldFunction_dHaighWestergaard</name>
        <qualifiedname>Marmot::ContinuumMechanics::CommonConstitutiveModels::MenetreyWillam::dYieldFunction_dHaighWestergaard</qualifiedname>
        <param>
          <type>const <ref refid="struct_marmot_1_1_continuum_mechanics_1_1_haigh_westergaard_1_1_haigh_westergaard_coordinates" kindref="compound">ContinuumMechanics::HaighWestergaard::HaighWestergaardCoordinates</ref>&lt; T &gt; &amp;</type>
          <declname>hw</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>varEps</declname>
          <defval>0.0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Evaluate the derivatives of the yield function with respect to the Haigh-Westergaard stress coordinates, i.e. <formula id="29">$df/d\xi,\,df/d\rho,\,df/d\theta$</formula>. When the optional fillet parameter varEps is given, a potential vertex along the hydrostatic axis is rounded. Thus, a smooth failure criterion is obtained, where derivatives can be calculated uniquely. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/Marmot/Marmot/modules/core/MarmotMechanicsCore/include/Marmot/MenetreyWillam.h" line="295" column="18" bodyfile="/home/runner/work/Marmot/Marmot/modules/core/MarmotMechanicsCore/include/Marmot/MenetreyWillam.h" bodystart="295" bodyend="318"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-static-func">
      <memberdef kind="function" id="class_marmot_1_1_continuum_mechanics_1_1_common_constitutive_models_1_1_menetrey_willam_1a746a9b4abb21ced264feb66a16a8b341" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>T</type>
        <definition>static T Marmot::ContinuumMechanics::CommonConstitutiveModels::MenetreyWillam::polarRadius</definition>
        <argsstring>(const T &amp;theta, const double &amp;e)</argsstring>
        <name>polarRadius</name>
        <qualifiedname>Marmot::ContinuumMechanics::CommonConstitutiveModels::MenetreyWillam::polarRadius</qualifiedname>
        <param>
          <type>const T &amp;</type>
          <declname>theta</declname>
        </param>
        <param>
          <type>const double &amp;</type>
          <declname>e</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Static version for computing the polar radius <formula id="21">$r$</formula> from the Lode angle <formula id="22">$\theta$</formula> and a specified value for the eccentricity parameter <formula id="23">$e$</formula>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/Marmot/Marmot/modules/core/MarmotMechanicsCore/include/Marmot/MenetreyWillam.h" line="147" column="16" bodyfile="/home/runner/work/Marmot/Marmot/modules/core/MarmotMechanicsCore/include/Marmot/MenetreyWillam.h" bodystart="147" bodyend="166"/>
      </memberdef>
      <memberdef kind="function" id="class_marmot_1_1_continuum_mechanics_1_1_common_constitutive_models_1_1_menetrey_willam_1a4345f2cf3aa0b78579ae6a778acdb1af" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>std::pair&lt; T, T &gt;</type>
        <definition>static std::pair&lt; T, T &gt; Marmot::ContinuumMechanics::CommonConstitutiveModels::MenetreyWillam::dPolarRadius_dTheta</definition>
        <argsstring>(const T &amp;theta, const double &amp;e)</argsstring>
        <name>dPolarRadius_dTheta</name>
        <qualifiedname>Marmot::ContinuumMechanics::CommonConstitutiveModels::MenetreyWillam::dPolarRadius_dTheta</qualifiedname>
        <param>
          <type>const T &amp;</type>
          <declname>theta</declname>
        </param>
        <param>
          <type>const double &amp;</type>
          <declname>e</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Static version for computing the polar radius <formula id="25">$r$$</formula> and its derivative <formula id="24">$\frac{dr}{d\theta}$</formula> from the Lode angle <formula id="22">$\theta$</formula> and a specified value for the eccentricity parameter <formula id="23">$e$</formula>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/Marmot/Marmot/modules/core/MarmotMechanicsCore/include/Marmot/MenetreyWillam.h" line="184" column="24" bodyfile="/home/runner/work/Marmot/Marmot/modules/core/MarmotMechanicsCore/include/Marmot/MenetreyWillam.h" bodystart="184" bodyend="221"/>
      </memberdef>
      <memberdef kind="function" id="class_marmot_1_1_continuum_mechanics_1_1_common_constitutive_models_1_1_menetrey_willam_1ad641e370821d42158d53517fffeb7142" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>std::tuple&lt; T, T, T &gt;</type>
        <definition>static std::tuple&lt; T, T, T &gt; Marmot::ContinuumMechanics::CommonConstitutiveModels::MenetreyWillam::d2PolarRadius_dTheta2</definition>
        <argsstring>(const T &amp;theta, const double &amp;e)</argsstring>
        <name>d2PolarRadius_dTheta2</name>
        <qualifiedname>Marmot::ContinuumMechanics::CommonConstitutiveModels::MenetreyWillam::d2PolarRadius_dTheta2</qualifiedname>
        <param>
          <type>const T &amp;</type>
          <declname>theta</declname>
        </param>
        <param>
          <type>const double &amp;</type>
          <declname>e</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/Marmot/Marmot/modules/core/MarmotMechanicsCore/include/Marmot/MenetreyWillam.h" line="224" column="25" bodyfile="/home/runner/work/Marmot/Marmot/modules/core/MarmotMechanicsCore/include/Marmot/MenetreyWillam.h" bodystart="224" bodyend="262"/>
      </memberdef>
      <memberdef kind="function" id="class_marmot_1_1_continuum_mechanics_1_1_common_constitutive_models_1_1_menetrey_willam_1a32841026833c72581b33e4382f0e9cf2" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>static double Marmot::ContinuumMechanics::CommonConstitutiveModels::MenetreyWillam::abaqusMohrCoulombPotentialVarEpsToMenetreyWillam</definition>
        <argsstring>(const double varEps, const double psi)</argsstring>
        <name>abaqusMohrCoulombPotentialVarEpsToMenetreyWillam</name>
        <qualifiedname>Marmot::ContinuumMechanics::CommonConstitutiveModels::MenetreyWillam::abaqusMohrCoulombPotentialVarEpsToMenetreyWillam</qualifiedname>
        <param>
          <type>const double</type>
          <declname>varEps</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>psi</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Compute a fillet parameter for the vertex of the yield surface along the hydrostatic axis in the same way as Abaqus does. This parameter is only relevant in the case of the Drucker-Prager or the Mohr-Coulomb criterion. The calculated smoothing value can then be used as the optional input argument varEps in <ref refid="class_marmot_1_1_continuum_mechanics_1_1_common_constitutive_models_1_1_menetrey_willam_1a901c05dc72df2e3e9ee027aeba4fbe80" kindref="member">yieldFunction</ref> and <ref refid="class_marmot_1_1_continuum_mechanics_1_1_common_constitutive_models_1_1_menetrey_willam_1a1349a9d288bda6205d42fecacfee5fa0" kindref="member">dYieldFunction_dHaighWestergaard</ref>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/Marmot/Marmot/modules/core/MarmotMechanicsCore/include/Marmot/MenetreyWillam.h" line="326" column="28" bodyfile="/home/runner/work/Marmot/Marmot/modules/core/MarmotMechanicsCore/include/Marmot/MenetreyWillam.h" bodystart="326" bodyend="329"/>
      </memberdef>
      <memberdef kind="function" id="class_marmot_1_1_continuum_mechanics_1_1_common_constitutive_models_1_1_menetrey_willam_1a9575c86015d34dc830a80260733068f9" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>static double Marmot::ContinuumMechanics::CommonConstitutiveModels::MenetreyWillam::e</definition>
        <argsstring>(const double fc, const double ft)</argsstring>
        <name>e</name>
        <qualifiedname>Marmot::ContinuumMechanics::CommonConstitutiveModels::MenetreyWillam::e</qualifiedname>
        <param>
          <type>const double</type>
          <declname>fc</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>ft</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Compute the eccentricity parameter based on a given compressive strength <ref refid="class_marmot_1_1_continuum_mechanics_1_1_common_constitutive_models_1_1_menetrey_willam_1ab2a1ca168ea4b5b2570220349548cfa1" kindref="member">fc</ref> and tensile strength <ref refid="class_marmot_1_1_continuum_mechanics_1_1_common_constitutive_models_1_1_menetrey_willam_1a5515f9b917927018cefd5515c8877dff" kindref="member">ft</ref>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/Marmot/Marmot/modules/core/MarmotMechanicsCore/include/Marmot/MenetreyWillam.h" line="335" column="28" bodyfile="/home/runner/work/Marmot/Marmot/modules/core/MarmotMechanicsCore/include/Marmot/MenetreyWillam.h" bodystart="335" bodyend="335"/>
      </memberdef>
      <memberdef kind="function" id="class_marmot_1_1_continuum_mechanics_1_1_common_constitutive_models_1_1_menetrey_willam_1abd3d40fc494ae13b2c49ddc1070d6290" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>static double Marmot::ContinuumMechanics::CommonConstitutiveModels::MenetreyWillam::c</definition>
        <argsstring>(const double fc, const double ft)</argsstring>
        <name>c</name>
        <qualifiedname>Marmot::ContinuumMechanics::CommonConstitutiveModels::MenetreyWillam::c</qualifiedname>
        <param>
          <type>const double</type>
          <declname>fc</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>ft</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Compute the cohesion based on a given compressive strength <ref refid="class_marmot_1_1_continuum_mechanics_1_1_common_constitutive_models_1_1_menetrey_willam_1ab2a1ca168ea4b5b2570220349548cfa1" kindref="member">fc</ref> and tensile strength <ref refid="class_marmot_1_1_continuum_mechanics_1_1_common_constitutive_models_1_1_menetrey_willam_1a5515f9b917927018cefd5515c8877dff" kindref="member">ft</ref>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/Marmot/Marmot/modules/core/MarmotMechanicsCore/include/Marmot/MenetreyWillam.h" line="341" column="28" bodyfile="/home/runner/work/Marmot/Marmot/modules/core/MarmotMechanicsCore/include/Marmot/MenetreyWillam.h" bodystart="341" bodyend="345"/>
      </memberdef>
      <memberdef kind="function" id="class_marmot_1_1_continuum_mechanics_1_1_common_constitutive_models_1_1_menetrey_willam_1a4804c0380beab98aba8dbd67789ed1ea" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>static double Marmot::ContinuumMechanics::CommonConstitutiveModels::MenetreyWillam::phi</definition>
        <argsstring>(const double fc, const double ft)</argsstring>
        <name>phi</name>
        <qualifiedname>Marmot::ContinuumMechanics::CommonConstitutiveModels::MenetreyWillam::phi</qualifiedname>
        <param>
          <type>const double</type>
          <declname>fc</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>ft</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Compute the friction angle in radian based on a given compressive strength <ref refid="class_marmot_1_1_continuum_mechanics_1_1_common_constitutive_models_1_1_menetrey_willam_1ab2a1ca168ea4b5b2570220349548cfa1" kindref="member">fc</ref> and tensile strength <ref refid="class_marmot_1_1_continuum_mechanics_1_1_common_constitutive_models_1_1_menetrey_willam_1a5515f9b917927018cefd5515c8877dff" kindref="member">ft</ref>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/Marmot/Marmot/modules/core/MarmotMechanicsCore/include/Marmot/MenetreyWillam.h" line="351" column="28" bodyfile="/home/runner/work/Marmot/Marmot/modules/core/MarmotMechanicsCore/include/Marmot/MenetreyWillam.h" bodystart="351" bodyend="351"/>
      </memberdef>
      <memberdef kind="function" id="class_marmot_1_1_continuum_mechanics_1_1_common_constitutive_models_1_1_menetrey_willam_1a5515f9b917927018cefd5515c8877dff" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>static double Marmot::ContinuumMechanics::CommonConstitutiveModels::MenetreyWillam::ft</definition>
        <argsstring>(const double c, const double phi)</argsstring>
        <name>ft</name>
        <qualifiedname>Marmot::ContinuumMechanics::CommonConstitutiveModels::MenetreyWillam::ft</qualifiedname>
        <param>
          <type>const double</type>
          <declname>c</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>phi</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Compute the tensile strength based on a given cohesion <ref refid="class_marmot_1_1_continuum_mechanics_1_1_common_constitutive_models_1_1_menetrey_willam_1abd3d40fc494ae13b2c49ddc1070d6290" kindref="member">c</ref> and a friction angle <ref refid="class_marmot_1_1_continuum_mechanics_1_1_common_constitutive_models_1_1_menetrey_willam_1a4804c0380beab98aba8dbd67789ed1ea" kindref="member">phi</ref>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/Marmot/Marmot/modules/core/MarmotMechanicsCore/include/Marmot/MenetreyWillam.h" line="356" column="28" bodyfile="/home/runner/work/Marmot/Marmot/modules/core/MarmotMechanicsCore/include/Marmot/MenetreyWillam.h" bodystart="356" bodyend="359"/>
      </memberdef>
      <memberdef kind="function" id="class_marmot_1_1_continuum_mechanics_1_1_common_constitutive_models_1_1_menetrey_willam_1ab2a1ca168ea4b5b2570220349548cfa1" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>static double Marmot::ContinuumMechanics::CommonConstitutiveModels::MenetreyWillam::fc</definition>
        <argsstring>(const double c, const double phi)</argsstring>
        <name>fc</name>
        <qualifiedname>Marmot::ContinuumMechanics::CommonConstitutiveModels::MenetreyWillam::fc</qualifiedname>
        <param>
          <type>const double</type>
          <declname>c</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>phi</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Compute the compressive strength based on a given cohesion <ref refid="class_marmot_1_1_continuum_mechanics_1_1_common_constitutive_models_1_1_menetrey_willam_1abd3d40fc494ae13b2c49ddc1070d6290" kindref="member">c</ref> and a friction angle <ref refid="class_marmot_1_1_continuum_mechanics_1_1_common_constitutive_models_1_1_menetrey_willam_1a4804c0380beab98aba8dbd67789ed1ea" kindref="member">phi</ref>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/Marmot/Marmot/modules/core/MarmotMechanicsCore/include/Marmot/MenetreyWillam.h" line="364" column="28" bodyfile="/home/runner/work/Marmot/Marmot/modules/core/MarmotMechanicsCore/include/Marmot/MenetreyWillam.h" bodystart="364" bodyend="367"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>Generalized failure criterion proposed by Menétrey and Willam. </para>
    </briefdescription>
    <detaileddescription>
<para>Implementation of the generalized failure criterion proposed by Menétrey and Willam    <formula id="16">\[ f(\xi,\rho,\theta) = \left(A_f\,\rho\right)^2+m\left(B_f\,\rho\,r(\theta,e)+C_f\,\xi\right) - 1
\]</formula></para>
<para>with the Haigh-Westergaard coordinates <formula id="17">$\xi,\,\rho,\,\theta$</formula> and the parameters <formula id="18">$A_f,\,B_f,\,C_f,\,m,\,e$</formula> which are automatically evaluated dependent on the desired formulation (supported types see <ref refid="class_marmot_1_1_continuum_mechanics_1_1_common_constitutive_models_1_1_menetrey_willam_1aee31f28f31786081f5eed39684e0d13e" kindref="member">MenetreyWillamType</ref>).</para>
<para><image type="html" name="yieldSurfaceDeviatoric_MenetreyWillam.png" width="75%"></image>
 <image type="latex" name="yieldSurfaceDeviatoric_MenetreyWillam.png" width="75%"></image>
</para>
<sect1 id="class_marmot_1_1_continuum_mechanics_1_1_common_constitutive_models_1_1_menetrey_willam_1autotoc_md0">
<title>Example</title><para>For a given pair of principal stress components in the Haigh-Westergaard stress space, evaluate the Mohr-Coulomb failure criterion: <programlisting><codeline><highlight class="preprocessor">#include<sp/>&lt;Marmot/MenetreyWillam.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;Marmot/HaighWestergaard.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">Marmot;</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>main()</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_marmot_1_1_continuum_mechanics_1_1_common_constitutive_models_1_1_menetrey_willam_1a5515f9b917927018cefd5515c8877dff" kindref="member">ft</ref><sp/>=<sp/>1.0;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_marmot_1_1_continuum_mechanics_1_1_common_constitutive_models_1_1_menetrey_willam_1ab2a1ca168ea4b5b2570220349548cfa1" kindref="member">fc</ref><sp/>=<sp/>10.0;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>mw<sp/>=<sp/><ref refid="class_marmot_1_1_continuum_mechanics_1_1_common_constitutive_models_1_1_menetrey_willam_1a8ee143cb61db234593e2eeec70748bf7" kindref="member">MenetreyWillam</ref>(<sp/><ref refid="class_marmot_1_1_continuum_mechanics_1_1_common_constitutive_models_1_1_menetrey_willam_1a5515f9b917927018cefd5515c8877dff" kindref="member">ft</ref><sp/>,<sp/><ref refid="class_marmot_1_1_continuum_mechanics_1_1_common_constitutive_models_1_1_menetrey_willam_1aee31f28f31786081f5eed39684e0d13eac61fd18636fa03149662bebe67f7e38f" kindref="member">MenetreyWillamType::MohrCoulomb</ref>,<sp/><ref refid="class_marmot_1_1_continuum_mechanics_1_1_common_constitutive_models_1_1_menetrey_willam_1ab2a1ca168ea4b5b2570220349548cfa1" kindref="member">fc</ref><sp/>);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>HaighWestergaard::HaighWestergaardCoordinates<sp/>hw<sp/>=<sp/>{<sp/>1.0,<sp/>-10,<sp/>0<sp/>};</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>mw.yieldCriterion(<sp/>hw<sp/>)<sp/>&gt;=<sp/>0<sp/>)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Material<sp/>is<sp/>yielding!&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Material<sp/>is<sp/>elastic!&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
</programlisting> </para>
</sect1>
    </detaileddescription>
    <collaborationgraph>
      <node id="1">
        <label>Marmot::ContinuumMechanics::CommonConstitutiveModels::MenetreyWillam</label>
        <link refid="class_marmot_1_1_continuum_mechanics_1_1_common_constitutive_models_1_1_menetrey_willam"/>
        <childnode refid="2" relation="usage">
          <edgelabel>param</edgelabel>
        </childnode>
      </node>
      <node id="2">
        <label>Marmot::ContinuumMechanics::CommonConstitutiveModels::MenetreyWillam::MenetreyWillamParameters</label>
        <link refid="struct_marmot_1_1_continuum_mechanics_1_1_common_constitutive_models_1_1_menetrey_willam_1_1_menetrey_willam_parameters"/>
      </node>
    </collaborationgraph>
    <location file="/home/runner/work/Marmot/Marmot/modules/core/MarmotMechanicsCore/include/Marmot/MenetreyWillam.h" line="79" column="5" bodyfile="/home/runner/work/Marmot/Marmot/modules/core/MarmotMechanicsCore/include/Marmot/MenetreyWillam.h" bodystart="79" bodyend="368"/>
    <listofallmembers>
      <member refid="class_marmot_1_1_continuum_mechanics_1_1_common_constitutive_models_1_1_menetrey_willam_1a32841026833c72581b33e4382f0e9cf2" prot="public" virt="non-virtual"><scope>Marmot::ContinuumMechanics::CommonConstitutiveModels::MenetreyWillam</scope><name>abaqusMohrCoulombPotentialVarEpsToMenetreyWillam</name></member>
      <member refid="class_marmot_1_1_continuum_mechanics_1_1_common_constitutive_models_1_1_menetrey_willam_1abd3d40fc494ae13b2c49ddc1070d6290" prot="public" virt="non-virtual"><scope>Marmot::ContinuumMechanics::CommonConstitutiveModels::MenetreyWillam</scope><name>c</name></member>
      <member refid="class_marmot_1_1_continuum_mechanics_1_1_common_constitutive_models_1_1_menetrey_willam_1ad641e370821d42158d53517fffeb7142" prot="public" virt="non-virtual"><scope>Marmot::ContinuumMechanics::CommonConstitutiveModels::MenetreyWillam</scope><name>d2PolarRadius_dTheta2</name></member>
      <member refid="class_marmot_1_1_continuum_mechanics_1_1_common_constitutive_models_1_1_menetrey_willam_1a5d358b2889e8ad693043f1e7a8617bdb" prot="public" virt="non-virtual"><scope>Marmot::ContinuumMechanics::CommonConstitutiveModels::MenetreyWillam</scope><name>dPolarRadius_dTheta</name></member>
      <member refid="class_marmot_1_1_continuum_mechanics_1_1_common_constitutive_models_1_1_menetrey_willam_1a4345f2cf3aa0b78579ae6a778acdb1af" prot="public" virt="non-virtual"><scope>Marmot::ContinuumMechanics::CommonConstitutiveModels::MenetreyWillam</scope><name>dPolarRadius_dTheta</name></member>
      <member refid="class_marmot_1_1_continuum_mechanics_1_1_common_constitutive_models_1_1_menetrey_willam_1a1349a9d288bda6205d42fecacfee5fa0" prot="public" virt="non-virtual"><scope>Marmot::ContinuumMechanics::CommonConstitutiveModels::MenetreyWillam</scope><name>dYieldFunction_dHaighWestergaard</name></member>
      <member refid="class_marmot_1_1_continuum_mechanics_1_1_common_constitutive_models_1_1_menetrey_willam_1a9575c86015d34dc830a80260733068f9" prot="public" virt="non-virtual"><scope>Marmot::ContinuumMechanics::CommonConstitutiveModels::MenetreyWillam</scope><name>e</name></member>
      <member refid="class_marmot_1_1_continuum_mechanics_1_1_common_constitutive_models_1_1_menetrey_willam_1ab2a1ca168ea4b5b2570220349548cfa1" prot="public" virt="non-virtual"><scope>Marmot::ContinuumMechanics::CommonConstitutiveModels::MenetreyWillam</scope><name>fc</name></member>
      <member refid="class_marmot_1_1_continuum_mechanics_1_1_common_constitutive_models_1_1_menetrey_willam_1a5515f9b917927018cefd5515c8877dff" prot="public" virt="non-virtual"><scope>Marmot::ContinuumMechanics::CommonConstitutiveModels::MenetreyWillam</scope><name>ft</name></member>
      <member refid="class_marmot_1_1_continuum_mechanics_1_1_common_constitutive_models_1_1_menetrey_willam_1a8ee143cb61db234593e2eeec70748bf7" prot="public" virt="non-virtual"><scope>Marmot::ContinuumMechanics::CommonConstitutiveModels::MenetreyWillam</scope><name>MenetreyWillam</name></member>
      <member refid="class_marmot_1_1_continuum_mechanics_1_1_common_constitutive_models_1_1_menetrey_willam_1aee31f28f31786081f5eed39684e0d13e" prot="public" virt="non-virtual"><scope>Marmot::ContinuumMechanics::CommonConstitutiveModels::MenetreyWillam</scope><name>MenetreyWillamType</name></member>
      <member refid="class_marmot_1_1_continuum_mechanics_1_1_common_constitutive_models_1_1_menetrey_willam_1a2e382a19d9516b3569857a142b88151a" prot="public" virt="non-virtual"><scope>Marmot::ContinuumMechanics::CommonConstitutiveModels::MenetreyWillam</scope><name>param</name></member>
      <member refid="class_marmot_1_1_continuum_mechanics_1_1_common_constitutive_models_1_1_menetrey_willam_1a4804c0380beab98aba8dbd67789ed1ea" prot="public" virt="non-virtual"><scope>Marmot::ContinuumMechanics::CommonConstitutiveModels::MenetreyWillam</scope><name>phi</name></member>
      <member refid="class_marmot_1_1_continuum_mechanics_1_1_common_constitutive_models_1_1_menetrey_willam_1a3ade49f99ffbbd015f920f20d4a62af2" prot="public" virt="non-virtual"><scope>Marmot::ContinuumMechanics::CommonConstitutiveModels::MenetreyWillam</scope><name>polarRadius</name></member>
      <member refid="class_marmot_1_1_continuum_mechanics_1_1_common_constitutive_models_1_1_menetrey_willam_1a746a9b4abb21ced264feb66a16a8b341" prot="public" virt="non-virtual"><scope>Marmot::ContinuumMechanics::CommonConstitutiveModels::MenetreyWillam</scope><name>polarRadius</name></member>
      <member refid="class_marmot_1_1_continuum_mechanics_1_1_common_constitutive_models_1_1_menetrey_willam_1a995459659e174b5cedc31adc02a0f708" prot="public" virt="non-virtual"><scope>Marmot::ContinuumMechanics::CommonConstitutiveModels::MenetreyWillam</scope><name>setParameters</name></member>
      <member refid="class_marmot_1_1_continuum_mechanics_1_1_common_constitutive_models_1_1_menetrey_willam_1a901c05dc72df2e3e9ee027aeba4fbe80" prot="public" virt="non-virtual"><scope>Marmot::ContinuumMechanics::CommonConstitutiveModels::MenetreyWillam</scope><name>yieldFunction</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
